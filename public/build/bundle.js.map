{"version":3,"sources":["webpack:///public/build/bundle.js","webpack:///webpack/bootstrap 3b94369ab9279f5b0c7c","webpack:///./public/app/js/main.js","webpack:///./public/app/js/modules/core.js","webpack:///./public/app/js/modules/ajax.js","webpack:///./public/app/js/modules/transport.js","webpack:///./public/app/js/modules/content.js","webpack:///./public/app/js/modules/appender.js","webpack:///./public/app/js/modules/parser.js","webpack:///./public/app/js/modules/comments.js","webpack:///./public/app/js/modules/alerts.js","webpack:///./public/app/js/modules/islandSettings.js","webpack:///./public/app/js/modules/autoresizeTextarea.js","webpack:///./public/app/js/modules/user.js","webpack:///./public/app/js/modules/sharer.js","webpack:///./public/app/js/modules/writing.js","webpack:///./public/app/js/modules/loader.js","webpack:///./public/app/js/modules/scrollUp.js","webpack:///./public/app/js/modules/branding.js","webpack:///./public/app/js/modules/pages.js"],"names":["codex","modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","nodes","content","init","customCheckboxes","approvalButtons","autoresizeTextarea","scrollUp","core","log","branding","docReady","f","test","document","readyState","window","setTimeout","ajax","transport","appender","parser","comments","alerts","islandSettings","user","sharer","writing","loader","pages","str","prefix","type","arg","staticLength","length","substr","console","e","getOffset","elem","docElem","win","rect","doc","getClientRects","getBoundingClientRect","width","height","ownerDocument","documentElement","top","pageYOffset","clientTop","left","pageXOffset","clientLeft","isElementOnScreen","el","elPositon","screenBottom","scrollY","innerHeight","css","getComputedStyle","insertAfter","target","element","parentNode","insertBefore","nextSibling","replace","nodeToReplace","replaceWith","replaceChild","random","min","max","Math","floor","delegateEvent","targetSelector","eventName","callback","addEventListener","event","matched","matches","parentElement","nodeTypes","TAG","TEXT","COMMENT","DOCUMENT_FRAGMENT","keys","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","ESC","SPACE","LEFT","UP","DOWN","RIGHT","DELETE","META","isDomNode","nodeType","this","parseHTML","inputString","contentHolder","childs","parsedNodes","createElement","innerHTML","trim","childNodes","node","i","textContent","push","isEmpty","obj","Object","isVisible","offsetParent","setCookie","name","value","expires","path","domain","toGMTString","cookie","getCookie","dc","begin","indexOf","end","unescape","substring","isFormData","object","append","data","url","XMLHTTP","XMLHttpRequest","ActiveXObject","successFunction","async","success","withCredentials","beforeSend","open","setRequestHeader","onreadystatechange","status","responseText","send","config_","input","configuration","inputElement","multiple","setAttribute","accept","send_","clickInput_","click","error","formData","FormData","files","toggle","which","marker","elements","querySelectorAll","classList","toggleMobileMenu","menu","getElementById","openedClass","stopPropagation","stopImmediatePropagation","preventDefault","CHECKED_CLASS","checkboxes","getElementsByClassName","clicked","checkbox","querySelector","isChecked","contains","removeAttribute","CLICKED_CLASS","buttons","button","isClicked","add","page","settings","blockForItems","loadMoreButton","buttonText","buttonId","targetBlockId","currentPage","autoLoading","isAllowed","load","requestUrl","parseInt","response","JSON","parse","list","canLoad","next_page","disable","showException","remove","style","display","isLaunched","scrollEvent","removeEventListener","scrollReachedEnd","body","clientHeight","_this","inputPasteCallback","sendRequest","title","sourceLink","article","commentsList","listId","anchor","highligthAnchor","reply","replyButton","CSS_","replyOpened","replyParams","parentId","dataset","rootId","action","form","createForm","getFormTextarea","focus","params","textarea","createTextarea","createButton","replyForm","appendChild","replyTextarea","placeholder","keydownSubmitHandler","blurTextareaHandler","addListener","replySubmitButton","submitClicked_","submit","getElementsByTagName","commentId","removeForm","ctrlPressed","ctrlKey","metaKey","enterPressed","keyCode","submitBtn","actionURL","csrf","comment","removeEmptyCommentsBlock","scrollTo","scrollHeight","highligthComment","activateMenu","show","message","emptyCommentsBlock","menuToggler","menuTogglerSelector","prepareToggler","highlighted","numbers","match","itemClicked","targetId","confirm","location","hash","prepare_","wrapper_","wrapper","options","notify","cross","time","notification","crossBtn","menuHolder","activated","CSS","item","showed","menuTogglers","selector","startIndex","endIndex","index","toggler","menuTogglerHovered","menuTogglerBlurred","menuParams","opened","createMenu","getMenuParams","assert","items","fill","move","itemData","itemElement","createItem","itemIndex","attr","itemEl","handler","args","togglerIndex","arguments","block","container","updateItem","currentItem","currentMenu","currentItemEl","textareas","checkScrollHeight","textareaChanged","photo","updatableElementsName","change","transportType","uploaded","uploadError","updateAll","newSource","updatebleImages","getElementsByName","src","promote","userId","role","field","requestData","menuIndex","buttonValue","changePassword","showForm","lockButton","set","form_","requestChange","showSuccessMessage","button_","dontShowResponse","ajaxResponse","repeatEmail","bio","edit","keydown","val","saved","newBio","createTextNode","email","currentEmail","loadingButton","island","sendConfirmation","changed","saveButton","sendButton","oninput","shareButtons","shareVk","link","desc","img","popup","shareFacebook","FB_APP_ID","href","shareTwitter","shareTelegram","socialType","yaCounter32652805","reachGoal","shareType","shareData","mergeSettings","initSettings","key","startEditor","EDITOR_IMAGE","EDITOR_FILE","editor","start","holderId","initialBlockPlugin","hideToolbar","hideEditorToolbar","sanitizer","tags","a","tools","paragraph","iconClassname","render","validate","save","allowedToPaste","showInlineToolbar","destroy","allowRenderOnPaste","header","appendCallback","makeSettings","displayInToolbox","image","prepare","isStretched","renderOnPastePatterns","pastePatterns","config","uploadImage","uploadFromUrl","attaches","cdxAttaches","fetchUrl","maxSize","make","enableLineBreaks","titleInput","titleId","titleKeydownHandler","loadResource","resource","scriptUrl","script","styleUrl","Promise","all","importScript","importStyle","editorIsReady","submitButton","resources","pageId","loadEditorResources","then","focusRedactor","aloneTextNode","firstBlock","redactor","firstChild","firstToolWrapper","caret","targetClicked","formId","hidePlaceholderClass","holder","onclick","map","getForm","atlasForm","forms","atlas","JSONinput","hidden","saver","saveBlocks","notifications","stringify","state","jsonOutput","submitResponse","redirect","openEditorFullscreen","prefixJS","prefixCSS","scriptPath","instanceName","resolve","reject","defer","onload","onerror","head","stylePath","rel","offsetToShow","layoutWidth","clickableZone","resizeStopWatcher","layoutHolderId","layout","offsetWidth","makeUI","scrollPage","windowScrollHandler","sizeChanged","resize","yCoords","notTheTop","windowWidth","clientWidth","leftColumtWidth","clearTimeout","arrow","emptyBrandingClass","loadingClass","preloaderClass","preloadShown","preload","fullUrl","previewUrl","preloader","backgroundImage","result","preview","currentItemClicked","openWriting","removeHandler","newChild","addToMenu","addToNews","getResponse","replaceMenu","updateSiteMenu","currentItemMenu","newResponseMenuText","oldMenu","newMenu"],"mappings":"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","file":"./public/build/bundle.js","sourcesContent":["var codex =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t* Require CSS build\n\t*/\n\t__webpack_require__(1);\n\t\n\t/**\n\t* Codex client\n\t* @author Savchenko Peter <specc.dev@gmail.com>\n\t*/\n\tcodex = (function (codex) {\n\t\n\t    'use strict';\n\t\n\t    /**\n\t    * Static nodes cache\n\t    */\n\t    codex.nodes = {\n\t        content : null\n\t    };\n\t\n\t    codex.init = function () {\n\t\n\t        /**\n\t        * Stylize custom checkboxes\n\t        */\n\t        codex.content.customCheckboxes.init();\n\t\n\t        /**\n\t        * Init approval buttons\n\t        */\n\t        codex.content.approvalButtons.init();\n\t\n\t        codex.autoresizeTextarea.init();\n\t\n\t        /**\n\t         * Activate scroll-up button\n\t         */\n\t        codex.scrollUp.init('js-layout-holder');\n\t\n\t        /**\n\t         * Client is ready\n\t         */\n\t        codex.core.log('Initialized', 'CodeX', 'info');\n\t\n\t        /**\n\t         * Initiate branding preload\n\t         */\n\t        codex.branding.init();\n\t\n\t    };\n\t\n\t    return codex;\n\t\n\t})({});\n\t\n\t/**\n\t* Document ready handler\n\t*/\n\tcodex.docReady = function (f) {\n\t\n\t    /in/.test(document.readyState) ? window.setTimeout(codex.docReady, 9, f) : f();\n\t\n\t};\n\t\n\t\n\t/**\n\t* Load modules\n\t*/\n\tcodex.core               = __webpack_require__(3);\n\tcodex.ajax               = __webpack_require__(4);\n\tcodex.transport          = __webpack_require__(5);\n\tcodex.content            = __webpack_require__(6);\n\tcodex.appender           = __webpack_require__(7);\n\tcodex.parser             = __webpack_require__(8);\n\tcodex.comments           = __webpack_require__(9);\n\tcodex.alerts             = __webpack_require__(10);\n\tcodex.islandSettings     = __webpack_require__(12);\n\tcodex.autoresizeTextarea = __webpack_require__(13);\n\tcodex.user               = __webpack_require__(14);\n\tcodex.sharer             = __webpack_require__(15);\n\tcodex.writing            = __webpack_require__(16);\n\tcodex.loader             = __webpack_require__(17);\n\tcodex.scrollUp           = __webpack_require__(18);\n\tcodex.branding           = __webpack_require__(19);\n\tcodex.pages              = __webpack_require__(20);\n\t\n\t\n\tmodule.exports = codex;\n\t\n\tcodex.docReady(function () {\n\t\n\t    codex.init();\n\t\n\t});\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 2 */,\n/* 3 */\n/***/ function(module, exports) {\n\n\t/**\n\t* Significant core methods\n\t*/\n\t\n\tmodule.exports = {\n\t\n\t    /** Logging method */\n\t    log : function (str, prefix, type, arg) {\n\t\n\t        var staticLength = 32;\n\t\n\t        if (prefix) {\n\t\n\t            prefix = prefix.length < staticLength ? prefix : prefix.substr( 0, staticLength - 2 );\n\t\n\t            while (prefix.length < staticLength - 1) {\n\t\n\t                prefix += ' ';\n\t\n\t            }\n\t\n\t            prefix += ':';\n\t            str = prefix + str;\n\t\n\t        }\n\t\n\t        type = type || 'log';\n\t\n\t        try {\n\t\n\t            if ('console' in window && window.console[ type ]) {\n\t\n\t                if (arg) console[type](str, arg);\n\t                else console[type](str);\n\t\n\t            }\n\t\n\t        } catch(e) {}\n\t\n\t    },\n\t\n\t    /**\n\t    * @return {object} dom element real offset\n\t    */\n\t    getOffset : function (elem) {\n\t\n\t        var docElem, win, rect, doc;\n\t\n\t        if (!elem) {\n\t\n\t            return;\n\t\n\t        }\n\t\n\t        /**\n\t        * Support: IE <=11 only\n\t        * Running getBoundingClientRect on a\n\t        * disconnected node in IE throws an error\n\t        */\n\t        if (!elem.getClientRects().length) {\n\t\n\t            return {\n\t                top: 0,\n\t                left: 0\n\t            };\n\t\n\t        }\n\t\n\t        rect = elem.getBoundingClientRect();\n\t\n\t        /** Make sure element is not hidden (display: none) */\n\t        if (rect.width || rect.height) {\n\t\n\t            doc = elem.ownerDocument;\n\t            win = window;\n\t            docElem = doc.documentElement;\n\t\n\t            return {\n\t                top: rect.top + win.pageYOffset - docElem.clientTop,\n\t                left: rect.left + win.pageXOffset - docElem.clientLeft\n\t            };\n\t\n\t        }\n\t\n\t        /** Return zeros for disconnected and hidden elements (gh-2310) */\n\t        return rect;\n\t\n\t    },\n\t\n\t    /**\n\t    * Checks if element visible on screen at the moment\n\t    * @param {Element} - HTML NodeElement\n\t    */\n\t    isElementOnScreen : function (el) {\n\t\n\t        var elPositon    = codex.core.getOffset(el).top,\n\t            screenBottom = window.scrollY + window.innerHeight;\n\t\n\t        return screenBottom > elPositon;\n\t\n\t    },\n\t\n\t    /**\n\t    * Returns computed css styles for element\n\t    * @param {Element} el\n\t    */\n\t    css : function (el) {\n\t\n\t        return window.getComputedStyle(el);\n\t\n\t    },\n\t\n\t    /**\n\t    * Helper for inserting one element after another\n\t    */\n\t    insertAfter : function (target, element) {\n\t\n\t        target.parentNode.insertBefore(element, target.nextSibling);\n\t\n\t    },\n\t\n\t    /**\n\t    * Replaces node with\n\t    * @param {Element} nodeToReplace\n\t    * @param {Element} replaceWith\n\t    */\n\t    replace : function (nodeToReplace, replaceWith) {\n\t\n\t        return nodeToReplace.parentNode.replaceChild(replaceWith, nodeToReplace);\n\t\n\t    },\n\t\n\t    /**\n\t    * Helper for insert one element before another\n\t    */\n\t    insertBefore : function (target, element) {\n\t\n\t        target.parentNode.insertBefore(element, target);\n\t\n\t    },\n\t\n\t    /**\n\t    * Returns random {int} between numbers\n\t    */\n\t    random : function (min, max) {\n\t\n\t        return Math.floor(Math.random() * (max - min + 1)) + min;\n\t\n\t    },\n\t\n\t    /**\n\t    * Attach event to Element in parent\n\t    * @param {Element} parentNode    - Element that holds event\n\t    * @param {string} targetSelector - selector to filter target\n\t    * @param {string} eventName      - name of event\n\t    * @param {function} callback     - callback function\n\t    */\n\t    delegateEvent : function (parentNode, targetSelector, eventName, callback) {\n\t\n\t        parentNode.addEventListener(eventName, function (event) {\n\t\n\t            var el = event.target, matched;\n\t\n\t            while (el && !matched) {\n\t\n\t                matched = el.matches(targetSelector);\n\t\n\t                if (!matched) el = el.parentElement;\n\t\n\t            }\n\t\n\t            if (matched) {\n\t\n\t                callback.call(event.target, event, el);\n\t\n\t            }\n\t\n\t        }, true);\n\t\n\t    },\n\t\n\t\n\t    /**\n\t    * Readable DOM-node types map\n\t    */\n\t    nodeTypes : {\n\t        TAG     : 1,\n\t        TEXT    : 3,\n\t        COMMENT : 8,\n\t        DOCUMENT_FRAGMENT : 11\n\t    },\n\t\n\t    /**\n\t    * Readable keys map\n\t    */\n\t    keys : { BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, ESC: 27, SPACE: 32, LEFT: 37, UP: 38, DOWN: 40, RIGHT: 39, DELETE: 46, META: 91 },\n\t\n\t    /**\n\t    * @protected\n\t    * Check object for DOM node\n\t    */\n\t    isDomNode : function (el) {\n\t\n\t        return el && typeof el === 'object' && el.nodeType && el.nodeType == this.nodeTypes.TAG;\n\t\n\t    },\n\t\n\t    /**\n\t    * Parses string to nodeList\n\t    * Removes empty text nodes\n\t    * @param {string} inputString\n\t    * @return {array} of nodes\n\t    *\n\t    * Does not supports <tr> and <td> on firts level of inputString\n\t    */\n\t\n\t    parseHTML : function (inputString) {\n\t\n\t        // var templatesSupported = spark.supports.templates();\n\t\n\t        var contentHolder,\n\t            childs,\n\t            parsedNodes = [];\n\t\n\t        // if ( false &&   templatesSupported ) {\n\t\n\t        //     contentHolder = document.createElement('template');\n\t        //     contentHolder.innerHTML = inputString.trim();\n\t\n\t        //     console.log(\"contentHolder: %o\", contentHolder);\n\t\n\t        //     childs = contentHolder.content.cloneNode(true).childNodes;\n\t\n\t        // } else {\n\t\n\t        contentHolder = document.createElement('div');\n\t        contentHolder.innerHTML = inputString.trim();\n\t\n\t        childs = contentHolder.childNodes;\n\t\n\t        // }\n\t\n\t\n\t        /**\n\t        * Iterate childNodes and remove empty Text Nodes on first-level\n\t        */\n\t        for (var i = 0, node; !!(node = childs[i]); i++) {\n\t\n\t            if (node.nodeType == codex.core.nodeTypes.TEXT && !node.textContent.trim()) {\n\t\n\t                continue;\n\t\n\t            }\n\t\n\t            parsedNodes.push(node);\n\t\n\t        }\n\t\n\t        return parsedNodes;\n\t\n\t    },\n\t\n\t    /**\n\t    * Checks passed object for emptiness\n\t    * @require ES5 - Object.keys\n\t    * @param {object}\n\t    */\n\t    isEmpty : function (obj) {\n\t\n\t        return Object.keys(obj).length === 0;\n\t\n\t    },\n\t\n\t    /**\n\t    * Check for Element visibility\n\t    * @param {Element} el\n\t    */\n\t    isVisible : function (el) {\n\t\n\t        return el.offsetParent !== null;\n\t\n\t    },\n\t\n\t    setCookie : function (name, value, expires, path, domain) {\n\t\n\t        var str = name + '=' + value;\n\t\n\t        if (expires) str += '; expires=' + expires.toGMTString();\n\t        if (path)    str += '; path=' + path;\n\t        if (domain)  str += '; domain=' + domain;\n\t\n\t        document.cookie = str;\n\t\n\t    },\n\t\n\t    getCookie : function (name) {\n\t\n\t        var dc = document.cookie;\n\t\n\t        var prefix = name + '=',\n\t            begin = dc.indexOf('; ' + prefix);\n\t\n\t        if (begin == -1) {\n\t\n\t            begin = dc.indexOf(prefix);\n\t            if (begin !== 0) return null;\n\t\n\t        } else\n\t            begin += 2;\n\t\n\t        var end = document.cookie.indexOf(';', begin);\n\t\n\t        if (end == -1) end = dc.length;\n\t\n\t        return unescape(dc.substring(begin + prefix.length, end));\n\t\n\t    },\n\t\n\t};\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t/**\n\t* AJAX module\n\t*/\n\tvar ajax = (function () {\n\t\n\t    /**\n\t    * @usage codex.ajax.call();\n\t    */\n\t    var call = function (data) {\n\t\n\t        if (!data || !data.url) return;\n\t\n\t        var XMLHTTP          = window.XMLHttpRequest ? new window.XMLHttpRequest() : new window.ActiveXObject('Microsoft.XMLHTTP'),\n\t            successFunction  = function () {};\n\t\n\t        data.async           = true;\n\t        data.type            = data.type || 'GET';\n\t        data.data            = data.data || '';\n\t        data['content-type'] = data['content-type'] || 'application/json; charset=utf-8';\n\t        successFunction      = data.success || successFunction;\n\t\n\t        if (data.type == 'GET' && data.data) {\n\t\n\t            data.url = /\\?/.test(data.url) ? data.url + '&' + data.data : data.url + '?' + data.data;\n\t\n\t        }\n\t\n\t        if (data.withCredentials) {\n\t\n\t            XMLHTTP.withCredentials = true;\n\t\n\t        }\n\t\n\t        if (data.beforeSend && typeof data.beforeSend == 'function') {\n\t\n\t            data.beforeSend.call();\n\t\n\t        }\n\t\n\t        XMLHTTP.open(data.type, data.url, data.async);\n\t\n\t        /**\n\t        * If we send FormData, we need no content-type header\n\t        */\n\t        if (!isFormData(data.data)) {\n\t\n\t            XMLHTTP.setRequestHeader('Content-type', data['content-type']);\n\t\n\t        }\n\t\n\t        XMLHTTP.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\t        XMLHTTP.onreadystatechange = function () {\n\t\n\t            if (XMLHTTP.readyState == 4 && XMLHTTP.status == 200) {\n\t\n\t                successFunction(XMLHTTP.responseText);\n\t\n\t            }\n\t\n\t        };\n\t\n\t        XMLHTTP.send(data.data);\n\t\n\t    };\n\t\n\t    /**\n\t     * Function for checking is it FormData object to send.\n\t     * @param {Object} object to check\n\t     * @return boolean\n\t     */\n\t    function isFormData(object) {\n\t\n\t        return typeof object.append === 'function';\n\t\n\t    };\n\t\n\t    return {\n\t\n\t        call : call\n\t\n\t    };\n\t\n\t}());\n\t\n\tmodule.exports = ajax;\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t/**\n\t * File transport module\n\t *\n\t * @module Transport module. Uploads file and returns some response from server\n\t * @copyright Codex-Team 2017\n\t *\n\t * @example\n\t *\n\t * Basic usage :\n\t *  codex.transport.init( {\n\t *      url : fetchURL,\n\t *      multiple : bool,\n\t *      accept : string  // http://htmlbook.ru/html/input/accept\n\t *      beforeSend : Function,\n\t *      success : Function,\n\t *      error : Function\n\t * });\n\t *\n\t * You can handle all of this event like:\n\t *  - what should happen before data sending with XMLHTTP\n\t *  - what should after success request\n\t *  - error handler\n\t */\n\t\n\tmodule.exports = ( function (transport) {\n\t\n\t    /** Empty configuration */\n\t    var config_ = null;\n\t\n\t    /** File holder */\n\t    transport.input = null;\n\t\n\t    /** initialize module */\n\t    transport.init = function (configuration) {\n\t\n\t        if (!configuration.url) {\n\t\n\t            codex.core.log('can\\'t send request because `url` is missed', 'Transport module', 'error');\n\t            return;\n\t\n\t        }\n\t\n\t        config_ = configuration;\n\t\n\t        var inputElement = document.createElement('INPUT');\n\t\n\t        inputElement.type = 'file';\n\t\n\t        if (config_ && config_.multiple) {\n\t\n\t            inputElement.setAttribute('multiple', 'multiple');\n\t\n\t        }\n\t\n\t        if (config_ && config_.accept) {\n\t\n\t            inputElement.setAttribute('accept', config_.accept);\n\t\n\t        }\n\t\n\t        inputElement.addEventListener('change', send_, false);\n\t\n\t        /** Save input */\n\t        transport.input = inputElement;\n\t\n\t        /** click input to show upload window */\n\t        clickInput_();\n\t\n\t    };\n\t\n\t    var clickInput_ = function () {\n\t\n\t        transport.input.click();\n\t\n\t    };\n\t\n\t    var send_ = function () {\n\t\n\t        var url        = config_.url,\n\t            beforeSend = config_.beforeSend,\n\t            success    = config_.success,\n\t            error      = config_.error,\n\t            formData   = new FormData(),\n\t            files      = transport.input.files;\n\t\n\t        if (files.length > 1) {\n\t\n\t            for (var i = 0; i < files.length; i++) {\n\t\n\t                formData.append('files[]', files[i], files[i].name);\n\t\n\t            }\n\t\n\t        } else {\n\t\n\t            formData.append('files', files[0], files[0].name);\n\t\n\t        }\n\t\n\t        codex.ajax.call({\n\t            type : 'POST',\n\t            data : formData,\n\t            url : url,\n\t            beforeSend : beforeSend,\n\t            success : success,\n\t            error : error\n\t        });\n\t\n\t    };\n\t\n\t    return transport;\n\t\n\t})({});\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t/**\n\t* Operations with pages\n\t*/\n\tmodule.exports = (function () {\n\t\n\t     /**\n\t    * Toggles classname on passed blocks\n\t    * @param {string} selector\n\t    * @param {string} toggled classname\n\t    */\n\t    var toggle = function ( which, marker ) {\n\t\n\t        var elements = document.querySelectorAll( which );\n\t\n\t        for (var i = elements.length - 1; i >= 0; i--) {\n\t\n\t            elements[i].classList.toggle( marker );\n\t\n\t        }\n\t\n\t    };\n\t\n\t\n\t    /**\n\t    * Toggles mobile menu\n\t    * Handles clicks on the hamburger icon in header\n\t    */\n\t    var toggleMobileMenu = function ( event ) {\n\t\n\t        var menu = document.getElementById('js-mobile-menu-holder'),\n\t            openedClass = 'mobile-menu-holder--opened';\n\t\n\t        menu.classList.toggle(openedClass);\n\t\n\t        event.stopPropagation();\n\t        event.stopImmediatePropagation();\n\t        event.preventDefault();\n\t\n\t    };\n\t\n\t    /**\n\t    * Module uses for toggle custom checkboxes\n\t    * that has 'js-custom-checkbox' class and input[type=\"checkbox\"] included\n\t    * Example:\n\t    * <span class=\"js-custom-checkbox\">\n\t    *    <input type=\"checkbox\" name=\"\" value=\"1\"/>\n\t    * </span>\n\t    */\n\t    var customCheckboxes = {\n\t\n\t        /**\n\t        * This class specifies checked custom-checkbox\n\t        * You may set it on serverisde\n\t        */\n\t        CHECKED_CLASS : 'checked',\n\t\n\t        init : function () {\n\t\n\t            var checkboxes = document.getElementsByClassName('js-custom-checkbox');\n\t\n\t            if (checkboxes.length) for (var i = checkboxes.length - 1; i >= 0; i--) {\n\t\n\t                checkboxes[i].addEventListener('click', codex.content.customCheckboxes.clicked, false);\n\t\n\t            }\n\t\n\t        },\n\t\n\t        clicked : function () {\n\t\n\t            var checkbox  = this,\n\t                input     = this.querySelector('input'),\n\t                isChecked = this.classList.contains(codex.content.customCheckboxes.CHECKED_CLASS);\n\t\n\t            checkbox.classList.toggle(codex.content.customCheckboxes.CHECKED_CLASS);\n\t\n\t            if (isChecked) {\n\t\n\t                input.removeAttribute('checked');\n\t\n\t            } else {\n\t\n\t                input.setAttribute('checked', 'checked');\n\t\n\t            }\n\t\n\t        }\n\t    };\n\t\n\t    var approvalButtons = {\n\t\n\t        CLICKED_CLASS : 'click-again-to-approve',\n\t\n\t        init : function () {\n\t\n\t            var buttons = document.getElementsByClassName('js-approval-button');\n\t\n\t            if (buttons.length) for (var i = buttons.length - 1; i >= 0; i--) {\n\t\n\t                buttons[i].addEventListener('click', codex.content.approvalButtons.clicked, false);\n\t\n\t            }\n\t\n\t        },\n\t\n\t        clicked : function (event) {\n\t\n\t            var button    = this,\n\t                isClicked = this.classList.contains(codex.content.approvalButtons.CLICKED_CLASS);\n\t\n\t            if (!isClicked) {\n\t\n\t                /* временное решение, пока нет всплывающего окна подверждения важных действий */\n\t                button.classList.add(codex.content.approvalButtons.CLICKED_CLASS);\n\t\n\t                event.preventDefault();\n\t\n\t            }\n\t\n\t        }\n\t    };\n\t\n\t    return {\n\t\n\t        toggleMobileMenu : toggleMobileMenu,\n\t        customCheckboxes : customCheckboxes,\n\t        approvalButtons : approvalButtons,\n\t        toggle : toggle\n\t\n\t    };\n\t\n\t}());\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Appender is being used for ajax-loading next pages of lists\n\t *\n\t *    codex.appender.init({\n\t *        buttonId      : 'buttonLoadNews',       // button for listening\n\t *        currentPage   : '<?= $page_number ?>',    // currentPage number\n\t *        url           : '/',                      // url for ajax-requests\n\t *        targetBlockId : 'list_of_news',           // target for appending\n\t *        autoLoading   : true,                     // allow loading when reach bottom while scrolling\n\t *    });\n\t */\n\t\n\tvar appender = {\n\t\n\t    /* Pagination. Here is a number of current page */\n\t    page : 1,\n\t\n\t    settings : null,\n\t\n\t    blockForItems : null,\n\t\n\t    loadMoreButton : null,\n\t\n\t    /**\n\t     * Button's text for saving it.\n\t     * On its place dots will be while news are loading\n\t     */\n\t    buttonText : null,\n\t\n\t    init : function (settings) {\n\t\n\t        this.settings = settings;\n\t\n\t        /* Checking for existing button and field for loaded info */\n\t        this.loadMoreButton = document.getElementById(this.settings.buttonId);\n\t\n\t        if (!this.loadMoreButton) return false;\n\t\n\t        this.blockForItems = document.getElementById(this.settings.targetBlockId);\n\t\n\t        if (!this.blockForItems) return false;\n\t\n\t        this.page       = settings.currentPage;\n\t        this.buttonText = this.loadMoreButton.innerHTML;\n\t\n\t        if (this.settings.autoLoading) this.autoLoading.isAllowed = true;\n\t\n\t        this.loadMoreButton.addEventListener('click', function (event) {\n\t\n\t            codex.appender.load();\n\t\n\t            event.preventDefault();\n\t\n\t            codex.appender.autoLoading.init();\n\t\n\t        }, false);\n\t\n\t    },\n\t\n\t    load : function () {\n\t\n\t        var requestUrl = this.settings.url + (parseInt(this.page) + 1);\n\t            // separator   = '<a href=\"' + requestUrl + '\"><div class=\"article post-list-item w_island separator\">Page ' + (parseInt(this.page) + 1) + '</div></a>';\n\t\n\t        codex.ajax.call({\n\t            type: 'post',\n\t            url: requestUrl,\n\t            data: {},\n\t            beforeSend : function () {\n\t\n\t                codex.appender.loadMoreButton.classList.add('loading');\n\t\n\t            },\n\t            success : function (response) {\n\t\n\t                response = JSON.parse(response);\n\t\n\t                if (response.success) {\n\t\n\t                    if (!response.list) return;\n\t\n\t                    /* Append items */\n\t                    // codex.appender.blockForItems.innerHTML += separator;\n\t                    codex.appender.blockForItems.innerHTML += response.list;\n\t\n\t                    /* Next page */\n\t                    codex.appender.page++;\n\t\n\t                    if (codex.appender.settings.autoLoading) {\n\t\n\t                        /* Removing restriction for auto loading */\n\t                        codex.appender.autoLoading.canLoad = true;\n\t\n\t                    }\n\t\n\t                    /* Checking for next page's existing. If no — hide the button for loading news and remove listener */\n\t                    if (!response.next_page) codex.appender.disable();\n\t\n\t                } else {\n\t\n\t                    codex.core.showException('Не удалось подгрузить новости');\n\t\n\t                }\n\t\n\t                codex.appender.loadMoreButton.classList.remove('loading');\n\t\n\t            }\n\t\n\t        });\n\t\n\t    },\n\t\n\t    disable : function () {\n\t\n\t        codex.appender.loadMoreButton.style.display = 'none';\n\t\n\t        if (codex.appender.autoLoading.isLaunched) {\n\t\n\t            codex.appender.autoLoading.disable();\n\t\n\t        }\n\t\n\t    },\n\t\n\t    autoLoading : {\n\t\n\t        isAllowed : false,\n\t\n\t        isLaunched : false,\n\t\n\t        /**\n\t         * Possibility to load news by scrolling.\n\t         * Restriction for reduction requests which could be while scrolling\n\t         */\n\t        canLoad : true,\n\t\n\t        init : function () {\n\t\n\t            if (!this.isAllowed) return;\n\t\n\t            window.addEventListener('scroll', codex.appender.autoLoading.scrollEvent);\n\t\n\t            codex.appender.autoLoading.isLaunched = true;\n\t\n\t        },\n\t\n\t        disable : function () {\n\t\n\t            window.removeEventListener('scroll', codex.appender.autoLoading.scrollEvent);\n\t\n\t            codex.appender.autoLoading.isLaunched = false;\n\t\n\t        },\n\t\n\t        scrollEvent : function () {\n\t\n\t            var scrollReachedEnd = window.pageYOffset + window.innerHeight >= document.body.clientHeight;\n\t\n\t            if (scrollReachedEnd && codex.appender.autoLoading.canLoad) {\n\t\n\t                codex.appender.autoLoading.canLoad = false;\n\t\n\t                codex.appender.load();\n\t\n\t            }\n\t\n\t        },\n\t\n\t    }\n\t\n\t};\n\t\n\tmodule.exports = appender;\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Parser module\n\t * @author Taly Guryn\n\t */\n\tvar parser = {\n\t\n\t    input : null,\n\t\n\t    init : function () {\n\t\n\t        // this.input = document.getElementById(settings.input_id);\n\t\n\t        var _this = this;\n\t\n\t        this.input.addEventListener('paste', function () {\n\t\n\t            _this.inputPasteCallback();\n\t\n\t        }, false);\n\t\n\t    },\n\t\n\t    inputPasteCallback : function () {\n\t\n\t        var e = this.input;\n\t\n\t        var _this = this;\n\t\n\t        window.setTimeout(function () {\n\t\n\t            _this.sendRequest(e.value);\n\t\n\t        }, 100);\n\t\n\t    },\n\t\n\t\n\t    sendRequest : function (url) {\n\t\n\t        codex.core.ajax({\n\t            type: 'get',\n\t            url: '/ajax/get_page',\n\t            data: { 'url' : url },\n\t            success: function (response) {\n\t\n\t                var title, content, sourceLink;\n\t\n\t                if ( response.success == 1) {\n\t\n\t                    title = document.getElementById('page_form_title');\n\t                    content = document.getElementById('page_form_content');\n\t                    sourceLink = document.getElementById('source_link');\n\t\n\t                    title.value = response.title;\n\t                    content.value = response.article;\n\t                    sourceLink.value = url;\n\t\n\t                    // while we have no own editor, we should use this getting element\n\t                    // cause I can't edit code for external editor\n\t                    document.getElementsByClassName('redactor_redactor')[0].innerHTML = response.article;\n\t\n\t                } else {\n\t\n\t                    codex.core.showException('Не удалось импортировать страницу');\n\t\n\t                }\n\t\n\t            }\n\t\n\t        });\n\t\n\t    }\n\t};\n\t\n\tmodule.exports = parser;\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Comments module\n\t * @author  @guryn @neSpecc\n\t * @copyright CodeX Team https://github.com/codex-team\n\t * @version 1.1.0\n\t */\n\tmodule.exports = (function () {\n\t\n\t    var commentsList = null,\n\t        anchor       = document.location.hash;\n\t\n\t    var CSS_ = {\n\t        replyForm :         'comments-form',\n\t        replyTextarea :     'comment-form__text',\n\t        replyOpened :       'comment-form__placeholder--opened',\n\t        replySubmitButton : 'comment-form__button',\n\t        highlighted :       'comment--highligthed'\n\t    };\n\t\n\t    /**\n\t     * Settings-menu toggler selector\n\t     * @type {String}\n\t     */\n\t    var menuTogglerSelector = '.js-comment-settings';\n\t\n\t    /**\n\t     * Initialize comments\n\t     * @param {object} data        params\n\t     * @param {sring} data.listId  comments list wrapper id\n\t     */\n\t    function init(data) {\n\t\n\t        commentsList = document.getElementById(data.listId);\n\t\n\t        if (anchor) {\n\t\n\t            highligthAnchor();\n\t\n\t        }\n\t\n\t    }\n\t\n\t    /**\n\t     * Remove holder and append form for comment\n\t     * @param {Element} placeholder 'Write reply...' button\n\t     */\n\t    function reply( replyButton ) {\n\t\n\t        /** If reply already opened, do noting */\n\t        if ( replyButton.classList.contains( CSS_.replyOpened ) ) {\n\t\n\t            return;\n\t\n\t        }\n\t\n\t        /** Get reply params from dataset */\n\t        var replyParams = {\n\t            parentId : replyButton.dataset.parentId,\n\t            rootId   : replyButton.dataset.rootId,\n\t            action   : replyButton.dataset.action\n\t        };\n\t\n\t        /** Create reply form */\n\t        var form = createForm( replyParams );\n\t\n\t        /** Insert form after reply button */\n\t        codex.core.insertAfter( replyButton, form );\n\t\n\t        replyButton.classList.add( CSS_.replyOpened );\n\t        getFormTextarea(form).focus();\n\t\n\t    }\n\t\n\t    /**\n\t     * Returns reply form\n\t     *\n\t     * @param {object} params\n\t     * @param {Number} params.parentId     parent comment's id\n\t     * @param {Number} params.rootId       root comment's id\n\t     * @param {String} params.action       URL for saving\n\t     *\n\t     * @return {Element} element that holds textarea and submit-button\n\t     */\n\t    function createForm( params ) {\n\t\n\t        var textarea     = createTextarea(),\n\t            button       = createButton(),\n\t            form         = document.createElement('DIV');\n\t\n\t        form.classList.add(CSS_.replyForm);\n\t\n\t        /** Store data in Textarea */\n\t        textarea.dataset.parentId = params.parentId;\n\t        textarea.dataset.rootId   = params.rootId;\n\t        textarea.dataset.action   = params.action;\n\t\n\t        form.appendChild(textarea);\n\t        form.appendChild(button);\n\t\n\t        return form;\n\t\n\t    }\n\t\n\t    /** Return textarea for form for comment */\n\t    function createTextarea() {\n\t\n\t        var textarea = document.createElement('TEXTAREA');\n\t\n\t        textarea.classList.add(CSS_.replyTextarea);\n\t        textarea.placeholder = 'Ваш комментарий';\n\t\n\t        textarea.addEventListener('keydown', keydownSubmitHandler, false);\n\t        textarea.addEventListener('blur', blurTextareaHandler, false);\n\t\n\t        codex.autoresizeTextarea.addListener(textarea);\n\t\n\t        return textarea;\n\t\n\t    }\n\t\n\t    /** Return submit button for form*/\n\t    function createButton() {\n\t\n\t        var button = document.createElement('DIV');\n\t\n\t        button.classList.add( CSS_.replySubmitButton, 'button', 'master');\n\t        button.textContent = 'Отправить';\n\t\n\t        button.addEventListener('click', submitClicked_, false);\n\t\n\t        return button;\n\t\n\t    }\n\t\n\t    /**\n\t     * Reply submit button click handler\n\t     */\n\t    function submitClicked_() {\n\t\n\t        var submit = this,\n\t            form   = submit.parentNode,\n\t            textarea = getFormTextarea(form);\n\t\n\t        send_( textarea );\n\t\n\t    }\n\t\n\t    /* Return textarea for given form */\n\t    function getFormTextarea(form) {\n\t\n\t        return form.getElementsByTagName('TEXTAREA')[0];\n\t\n\t    }\n\t\n\t    /**\n\t     * Remove form on textarea blur\n\t     * @param {Event} blur Event\n\t     */\n\t    function blurTextareaHandler( event ) {\n\t\n\t        var textarea  = event.target,\n\t            form      = textarea.parentNode,\n\t            commentId = textarea.dataset.parentId;\n\t\n\t        if (!textarea.value.trim()) {\n\t\n\t            removeForm(form, commentId);\n\t\n\t        }\n\t\n\t    }\n\t\n\t    /**\n\t     * Removes reply form\n\t     * @param {Element} form\n\t     * @param {Number} commentId   reply target comment id\n\t     */\n\t    function removeForm( form, commentId ) {\n\t\n\t        var replyButton = document.getElementById('reply' + commentId );\n\t\n\t        form.remove();\n\t        replyButton.classList.remove(CSS_.replyOpened);\n\t\n\t    }\n\t\n\t    /**\n\t     * Catch Ctrl+Enter or Cmd+Enter for send form\n\t     * @param {Event} event    Keydown Event\n\t     */\n\t    function keydownSubmitHandler(event) {\n\t\n\t        var ctrlPressed  = event.ctrlKey || event.metaKey,\n\t            enterPressed = event.keyCode == 13,\n\t            textarea = event.target;\n\t\n\t        if ( ctrlPressed && enterPressed ) {\n\t\n\t            send_( textarea );\n\t\n\t            event.preventDefault();\n\t\n\t        }\n\t\n\t    }\n\t\n\t    /**\n\t     * Ajax function for submit comment\n\t     * @param {Element} textarea    input with dataset and text\n\t     */\n\t    function send_( textarea ) {\n\t\n\t        var formData  = new FormData(),\n\t            form      = textarea.parentNode,\n\t            submitBtn = form.querySelector('.' + CSS_.replySubmitButton),\n\t            rootId    = textarea.dataset.rootId,\n\t            parentId  = textarea.dataset.parentId,\n\t            actionURL = textarea.dataset.action;\n\t\n\t        formData.append('root_id', rootId);\n\t        formData.append('parent_id', parentId);\n\t        formData.append('comment_text', textarea.value);\n\t        formData.append('csrf', window.csrf);\n\t\n\t        codex.ajax.call({\n\t            type: 'POST',\n\t            url: actionURL,\n\t            data: formData,\n\t            beforeSend : function () {\n\t\n\t                submitBtn.classList.add('loading');\n\t\n\t            },\n\t            success : function (response) {\n\t\n\t                var comment;\n\t\n\t                submitBtn.classList.remove('loading');\n\t\n\t                response = JSON.parse(response);\n\t\n\t                if (!response.success) {\n\t\n\t                    codex.alerts.show({\n\t                        type: 'error',\n\t                        message: response.error\n\t                    });\n\t                    return;\n\t\n\t                }\n\t\n\t                /** Remove form and return placeholder */\n\t                removeForm(form, parentId);\n\t\n\t                /** Remove empty-feed block */\n\t                removeEmptyCommentsBlock();\n\t\n\t                comment = codex.core.parseHTML(response.comment)[0];\n\t                commentsList.appendChild(comment);\n\t\n\t                /** Scroll down to the new comment */\n\t                window.scrollTo(0, document.body.scrollHeight);\n\t\n\t                /** Highligth new comment */\n\t                highligthComment(response.commentId);\n\t\n\t                /** If menu found, activate it */\n\t                activateMenu(comment);\n\t\n\t            }\n\t\n\t        });\n\t\n\t    }\n\t\n\t    /**\n\t     * Removes empty-feed motivation\n\t     */\n\t    function removeEmptyCommentsBlock() {\n\t\n\t        var emptyCommentsBlock = document.querySelector('.js-empty-comments');\n\t\n\t        if (!emptyCommentsBlock) {\n\t\n\t            return;\n\t\n\t        }\n\t\n\t        emptyCommentsBlock.remove();\n\t\n\t    }\n\t\n\t    /**\n\t     * If menu-toggler found in comment\n\t     * @return {Element} comment - comment's island\n\t     */\n\t    function activateMenu( comment ) {\n\t\n\t        var  menuToggler = comment.querySelector(menuTogglerSelector);\n\t\n\t        if (!menuToggler) {\n\t\n\t            return;\n\t\n\t        }\n\t\n\t        codex.islandSettings.prepareToggler(menuToggler, menuTogglerSelector);\n\t\n\t    }\n\t\n\t    /**\n\t     * Highligth comment by id for a time\n\t     * @param {Number} commentId   id comment to highlight\n\t     */\n\t    function highligthComment(commentId) {\n\t\n\t        var comment = document.getElementById('comment' + commentId);\n\t\n\t        comment.classList.add(CSS_.highlighted);\n\t\n\t        window.setTimeout(function () {\n\t\n\t            comment.classList.remove(CSS_.highlighted);\n\t\n\t        }, 500);\n\t\n\t    }\n\t\n\t    /** Highligth comment if anchor is in url */\n\t    function highligthAnchor() {\n\t\n\t        var numbers = anchor.match(/\\d+/),\n\t            commentId;\n\t\n\t        if (!numbers) return;\n\t\n\t        commentId = numbers[0];\n\t\n\t        highligthComment(commentId);\n\t\n\t    }\n\t\n\t    /**\n\t     * Comment removing action\n\t     * @return {Event} click Event\n\t     */\n\t    function remove() {\n\t\n\t        var itemClicked = this,\n\t            targetId    = itemClicked.dataset.id;\n\t\n\t        if (!window.confirm('Подтвердите удаление комментария')) {\n\t\n\t            return;\n\t\n\t        }\n\t\n\t        document.location = '/delete-comment/' + targetId;\n\t\n\t    }\n\t\n\t    return {\n\t        init : init,\n\t        reply : reply,\n\t        remove : remove\n\t    };\n\t\n\t}());\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t* Notifications tips module\n\t*/\n\tmodule.exports = (function () {\n\t\n\t    __webpack_require__(11);\n\t\n\t    var CSS_ = {\n\t        wrapper : 'cdx-notifies-wrapper',\n\t        notification : 'cdx-notifies',\n\t        crossBtn: 'cdx-notifies-cross'\n\t    };\n\t\n\t    var wrapper_ = null;\n\t\n\t    function prepare_() {\n\t\n\t        if ( wrapper_ ) {\n\t\n\t            return true;\n\t\n\t        }\n\t\n\t        wrapper_ = document.createElement('DIV');\n\t        wrapper_.classList.add(CSS_.wrapper);\n\t\n\t        document.body.appendChild(wrapper_);\n\t\n\t    }\n\t\n\t    /**\n\t    * @param {Object} options:\n\t    *\n\t    * @property {String} type    - type of notification. Just adds {CSS_.notification + '--' + type} class. 'notify' by default\n\t    * @property {String} message - text to notify, can contains HTML\n\t    * @property {String} time    - expiring time\n\t    */\n\t    function show(options) {\n\t\n\t        prepare_();\n\t\n\t        var notify  = document.createElement('DIV'),\n\t            cross   = document.createElement('DIV'),\n\t            message = options.message,\n\t            type    = options.type || 'notify',\n\t            time    = options.time || 8000;\n\t\n\t        if (!message) {\n\t\n\t            return;\n\t\n\t        }\n\t\n\t        notify.classList.add(CSS_.notification);\n\t        notify.classList.add(CSS_.notification + '--' + type);\n\t        notify.innerHTML = message;\n\t\n\t        cross.classList.add(CSS_.crossBtn);\n\t        cross.addEventListener('click', function () {\n\t\n\t            notify.remove();\n\t\n\t        });\n\t\n\t        notify.appendChild(cross);\n\t        wrapper_.appendChild(notify);\n\t\n\t        notify.classList.add('bounceIn');\n\t\n\t        window.setTimeout(function () {\n\t\n\t            notify.remove();\n\t\n\t        }, time);\n\t\n\t    }\n\t\n\t    return {\n\t        show : show\n\t    };\n\t\n\t})({});\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t/**\n\t* Dropdown menu module\n\t* @author: @ndawn\n\t*/\n\t\n\tmodule.exports = (function () {\n\t\n\t    /**\n\t     * Menu block cache\n\t     * @type {Element|null}\n\t     */\n\t    var menuHolder = null;\n\t\n\t    /**\n\t     * Activated menus\n\t     * @type {Array}\n\t     */\n\t    var activated = [];\n\t\n\t    /**\n\t     * CSS class names\n\t     * @type {Object}\n\t     */\n\t    var CSS = {\n\t        menu   : 'island-settings__menu',\n\t        item   : 'island-settings__item',\n\t        showed : 'island-settings__menu--showed'\n\t\n\t    };\n\t\n\t    /**\n\t     * Initialization\n\t     * @param  {Object} settings  - initial settings\n\t     */\n\t    var init = function (settings) {\n\t\n\t        var menuTogglers = document.querySelectorAll(settings.selector),\n\t            startIndex   = activated.length,\n\t            endIndex     = menuTogglers.length + activated.length;\n\t\n\t        for (var index = startIndex; index < endIndex; index++) {\n\t\n\t            /**\n\t             * Save initial object\n\t             */\n\t            activated.push({\n\t                el : menuTogglers[index],\n\t                settings: settings\n\t            });\n\t\n\t            prepareToggler(index, menuTogglers[index - startIndex]);\n\t\n\t        }\n\t\n\t    };\n\t\n\t    /**\n\t     * @public\n\t     * Add event listener to the toggler\n\t     * @param  {Number} index   - toggler initial index\n\t     * @param  {Element} toggler\n\t     */\n\t    var prepareToggler = function (index, toggler) {\n\t\n\t        /** Save initial selector to specify menu type */\n\t        toggler.dataset.index = index;\n\t        toggler.addEventListener('mouseover', menuTogglerHovered, false);\n\t        toggler.addEventListener('mouseleave', menuTogglerBlurred, false);\n\t\n\t    };\n\t\n\t    /**\n\t     * @private\n\t     *\n\t     * Island circled-icon mouseover handler\n\t     *\n\t     * @param {Event} event     mouseover-event\n\t     */\n\t    var menuTogglerHovered = function () {\n\t\n\t        var menuToggler = this,\n\t            menuParams;\n\t\n\t        /** Prevent mouseover handling multiple times */\n\t        if ( menuToggler.dataset.opened == 'true' ) {\n\t\n\t            return;\n\t\n\t        }\n\t\n\t        menuToggler.dataset.opened = true;\n\t\n\t        if (!menuHolder) {\n\t\n\t            menuHolder = createMenu();\n\t\n\t        }\n\t\n\t        /**\n\t         * Get current menu params\n\t         * @type {Object}\n\t         */\n\t        menuParams = getMenuParams(menuToggler.dataset.index);\n\t\n\t        console.assert(menuParams.items, 'Menu items missed');\n\t\n\t        fill(menuParams.items, menuToggler);\n\t        move(menuToggler);\n\t\n\t    };\n\t\n\t    /**\n\t     * Toggler blur handler\n\t     */\n\t    var menuTogglerBlurred = function () {\n\t\n\t        this.dataset.opened = false;\n\t\n\t    };\n\t\n\t    /**\n\t     * Return menu parametres by toggler index\n\t     * @param {Number}  index  - index got in init() method\n\t     * @return {Object}\n\t     */\n\t    var getMenuParams = function (index) {\n\t\n\t        return activated[index].settings;\n\t\n\t    };\n\t\n\t    /**\n\t     * Fills menu with items\n\t     * @param  {Array}   items     list of menu items\n\t     * @param  {Element} toggler   islan menu icon with data-attributes\n\t     */\n\t\n\t    var fill = function (items, toggler) {\n\t\n\t        var i,\n\t            itemData,\n\t            itemElement;\n\t\n\t        menuHolder.innerHTML = '';\n\t\n\t        for (i = 0; !!(itemData = items[i]); i++) {\n\t\n\t            itemElement = createItem(itemData);\n\t\n\t            /** Save index in dataset for edit-ability */\n\t            itemElement.dataset.itemIndex = i;\n\t\n\t            /** Pass all parametres stored in icon's dataset to the item's dataset */\n\t            for (var attr in toggler.dataset) {\n\t\n\t                itemElement.dataset[attr] = toggler.dataset[attr];\n\t\n\t            }\n\t\n\t            menuHolder.appendChild(itemElement);\n\t\n\t        }\n\t\n\t    };\n\t\n\t    /**\n\t    * @private\n\t    * Creates an option block\n\t    * @param {Object}   item          - menu item data\n\t    * @param {String}   item.title    - title\n\t    * @param {Function} item.handler  - click handler\n\t    *\n\t    * @return {Element} menu item with click handler\n\t    */\n\t    var createItem = function ( item ) {\n\t\n\t        var itemEl = document.createElement('LI');\n\t\n\t        itemEl.classList.add(CSS.item);\n\t\n\t        console.assert(item.title, 'islandSettings: item title is missed');\n\t        console.assert(typeof item.handler == 'function', 'islandSettings: item handler is not a function');\n\t\n\t        itemEl.textContent = item.title;\n\t        itemEl.addEventListener('click', itemClicked);\n\t\n\t        return itemEl;\n\t\n\t    };\n\t\n\t    /**\n\t     * Single callback for all items handler\n\t     * Calls defined handler on itemClicked (Menu li Element) context and trasmits arguments\n\t     */\n\t    var itemClicked = function () {\n\t\n\t        var itemEl = this,\n\t            togglerIndex = itemEl.dataset.index,\n\t            itemIndex = itemEl.dataset.itemIndex,\n\t            menuParams,\n\t            handler,\n\t            args;\n\t\n\t        menuParams = getMenuParams(togglerIndex);\n\t\n\t        handler = menuParams.items[itemIndex].handler;\n\t        args    = menuParams.items[itemIndex].arguments;\n\t\n\t        handler.call(itemEl, args || {});\n\t\n\t    };\n\t\n\t    /**\n\t    * @private\n\t    * Creates the dropdown menu\n\t    */\n\t    var createMenu = function () {\n\t\n\t        var block = document.createElement('UL');\n\t\n\t        block.classList.add(CSS.menu);\n\t\n\t        return block;\n\t\n\t    };\n\t\n\t    /**\n\t    * Appends a menu to the container\n\t    * @param {Element} container - where to append menu\n\t    */\n\t    var move = function (container) {\n\t\n\t        container.appendChild(menuHolder);\n\t        menuHolder.classList.add(CSS.showed);\n\t\n\t    };\n\t\n\t    /**\n\t     * @public\n\t     * @description Updates menu item\n\t     * @param  {Number} togglerIndex   - Menu toggler initial index stored in toggler's dataset.index\n\t     * @param  {Number} itemIndex      - Item index stored in item's dataset.itemIndex\n\t     * @param  {String} title          - new title\n\t     * @param  {Function} handler      - new handler\n\t     * @param  {Object} args           - handler arguments\n\t     */\n\t    var updateItem = function (togglerIndex, itemIndex, title, handler, args) {\n\t\n\t        console.assert(activated[togglerIndex], 'Toggler was not found by index');\n\t\n\t        var currentMenu = activated[togglerIndex],\n\t            currentItemEl = menuHolder.childNodes[itemIndex],\n\t            currentItem;\n\t\n\t        if (!currentMenu) {\n\t\n\t            return;\n\t\n\t        }\n\t\n\t        currentItem = activated[togglerIndex].settings.items[itemIndex];\n\t\n\t        if ( title ) {\n\t\n\t            currentItem.title = title;\n\t\n\t        }\n\t\n\t        if ( args  ) {\n\t\n\t            currentItem.arguments = args;\n\t\n\t        }\n\t\n\t        if (handler && typeof handler == 'function') {\n\t\n\t            currentItem.handler = handler;\n\t\n\t        }\n\t\n\t        /** Update opened menu item text  */\n\t        if (menuHolder) {\n\t\n\t            if ( title ) {\n\t\n\t                currentItemEl.textContent = title;\n\t\n\t            }\n\t\n\t        }\n\t\n\t        codex.core.log('item updated %o', 'islandSettings', 'info', currentItem);\n\t\n\t    };\n\t\n\t    return {\n\t        init : init,\n\t        updateItem : updateItem,\n\t        prepareToggler : prepareToggler\n\t    };\n\t\n\t})();\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t/**\n\t* Module for comments textarea autoresize\n\t*/\n\tmodule.exports = (function () {\n\t\n\t    /**\n\t    * Textareas initialization\n\t    */\n\t    var init = function () {\n\t\n\t        var textareas = document.getElementsByClassName('js-autoresizable');\n\t\n\t        if (textareas.length) {\n\t\n\t            for (var i = 0; i < textareas.length; i++) {\n\t\n\t                addListener(textareas[i]);\n\t\n\t                checkScrollHeight(textareas[i]);\n\t\n\t            }\n\t\n\t        }\n\t\n\t    };\n\t\n\t    /**\n\t    * Add input event listener to textarea\n\t    *\n\t    * @param {Element} textarea — node which need to be able to autoresize\n\t    */\n\t    var addListener = function (textarea) {\n\t\n\t        textarea.addEventListener('input', textareaChanged, false);\n\t\n\t    };\n\t\n\t    /**\n\t    * Hanging events on textareas\n\t    */\n\t    var textareaChanged = function (event) {\n\t\n\t        var textarea = event.target;\n\t\n\t        checkScrollHeight(textarea);\n\t\n\t    };\n\t\n\t    /**\n\t    * Increasing textarea height\n\t    */\n\t    var checkScrollHeight = function (textarea) {\n\t\n\t        if (textarea.scrollHeight > textarea.clientHeight) {\n\t\n\t            textarea.style.height = textarea.scrollHeight + 'px';\n\t\n\t        }\n\t\n\t    };\n\t\n\t    return {\n\t        init: init,\n\t        addListener : addListener\n\t    };\n\t\n\t}());\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\t/**\n\t * User methods module\n\t */\n\tmodule.exports = function () {\n\t\n\t    /**\n\t     * Manupulations with user photo\n\t     * @return {Object} - Module\n\t     */\n\t    var photo = function () {\n\t\n\t        /**\n\t         * Mark elements with this name=\"\" to dynamically update their sources\n\t         * @type {String}\n\t         */\n\t        var updatableElementsName = 'js-img-updatable';\n\t\n\t        /**\n\t         * Changes user's photo\n\t         * @param  {Event}  event   click event\n\t         */\n\t        var change = function ( event, transportType ) {\n\t\n\t            codex.transport.init({\n\t                url : '/upload/' + transportType,\n\t                success : uploaded,\n\t                error   : error\n\t            });\n\t\n\t        };\n\t\n\t        /**\n\t         * Uploading error\n\t         * @param  {Object} error\n\t         */\n\t        var error = function (uploadError) {\n\t\n\t            console.log(uploadError);\n\t\n\t        };\n\t\n\t        /**\n\t         * Photo uploading callback\n\t         * @param  {String} response    server answer\n\t         */\n\t        var uploaded = function (response) {\n\t\n\t            response = JSON.parse(response);\n\t\n\t            if ( !response.success ) {\n\t\n\t                codex.alerts.show({\n\t                    type: 'error',\n\t                    message: response.message || 'File uploading error :('\n\t                });\n\t\n\t                return;\n\t\n\t            }\n\t\n\t            console.assert( response.data && response.data.url, 'Wrong response data');\n\t\n\t            updateAll( response.data.url );\n\t\n\t        };\n\t\n\t        /**\n\t         * Updates all user photo sources\n\t         * @uses   updatableElementsName  to find img tags\n\t         * @param  {String} newSource\n\t         */\n\t        var updateAll = function ( newSource) {\n\t\n\t            var updatebleImages = document.getElementsByName(updatableElementsName);\n\t\n\t            for (var i = updatebleImages.length - 1; i >= 0; i--) {\n\t\n\t                updatebleImages[i].src = newSource;\n\t\n\t            }\n\t\n\t        };\n\t\n\t        return {\n\t            change : change\n\t        };\n\t\n\t    }();\n\t\n\t    /**\n\t     * Updatin user ROLE or STATUS\n\t     * @type {{status, role}}\n\t     */\n\t    var promote = function () {\n\t\n\t        var status = function (args) {\n\t\n\t            var itemClicked = this,\n\t                userId = itemClicked.dataset.id,\n\t                value = args.value;\n\t\n\t            sendRequest(itemClicked, 'status', userId, value);\n\t\n\t        };\n\t\n\t        var role = function (args) {\n\t\n\t            var itemClicked = this,\n\t                userId = itemClicked.dataset.id,\n\t                value = args.value;\n\t\n\t            sendRequest(itemClicked, 'role', userId, value);\n\t\n\t        };\n\t\n\t        /**\n\t         * Change user role or status request\n\t         * @param {Element} itemClicked     - menu item element\n\t         * @param {string}  field           - field to save (role|status)\n\t         * @param {Number}  userId          - target user id\n\t         * @param {Number}  value           - new value\n\t         */\n\t        var sendRequest = function (itemClicked, field, userId, value) {\n\t\n\t            var url = '/user/' + userId + '/change/' + field,\n\t                requestData = new FormData();\n\t\n\t            requestData.append('value', value);\n\t\n\t            codex.ajax.call({\n\t                url : url,\n\t                type : 'POST',\n\t                data: requestData,\n\t                beforeSend : function () {\n\t\n\t                    itemClicked.classList.add('loading');\n\t\n\t                },\n\t                success: function (response) {\n\t\n\t                    var menuIndex = itemClicked.dataset.index,\n\t                        itemIndex = itemClicked.dataset.itemIndex;\n\t\n\t                    response = JSON.parse(response);\n\t\n\t                    itemClicked.classList.remove('loading');\n\t\n\t                    codex.islandSettings.updateItem(menuIndex, itemIndex, response.buttonText, null, {\n\t                        value: response.buttonValue\n\t                    });\n\t\n\t                    codex.alerts.show({\n\t                        type: response.success ? 'success' : 'error',\n\t                        message: response.message || 'Не удалось сохранить изменения'\n\t                    });\n\t\n\t                }\n\t            });\n\t\n\t        };\n\t\n\t        return {\n\t            status : status,\n\t            role   : role\n\t        };\n\t\n\t    }();\n\t\n\t\n\t    var changePassword = function () {\n\t\n\t        var form    = null,\n\t            input   = null,\n\t            button  = null;\n\t        /**\n\t         * Shows form with input for current password\n\t         *\n\t         * @param lockButton\n\t         */\n\t        var showForm = function (lockButton) {\n\t\n\t            lockButton.classList.add('hide');\n\t\n\t            form = document.getElementById('change-password-form');\n\t            input = document.getElementById('change-password-input');\n\t\n\t            form.classList.remove('hide');\n\t\n\t\n\t        };\n\t\n\t        /**\n\t         * Handler for set password button\n\t         *\n\t         * @param form_\n\t         */\n\t        var set = function (form_) {\n\t\n\t            form = form_;\n\t            requestChange(form, true);\n\t            showSuccessMessage();\n\t\n\t        };\n\t\n\t        /**\n\t         * Requests email with change password link\n\t         *\n\t         * @param button_\n\t         * @param dontShowResponse - if TRUE, response will be ignored\n\t         */\n\t        var requestChange = function (button_, dontShowResponse) {\n\t\n\t            button = button_;\n\t            button.classList.add('loading');\n\t\n\t            var data = new FormData();\n\t\n\t            data.append('csrf', window.csrf);\n\t            data.append('currentPassword', input ? input.value : '');\n\t\n\t            codex.ajax.call({\n\t                url: '/user/passchange',\n\t                type: 'POST',\n\t                data: data,\n\t                success: dontShowResponse ? null : ajaxResponse,\n\t                error: ajaxResponse\n\t            });\n\t\n\t        };\n\t\n\t        /**\n\t         * Repeat password change email sending\n\t         *\n\t         * @param button_\n\t         */\n\t        var repeatEmail = function (button_) {\n\t\n\t            button_.classList.add('loading');\n\t\n\t            var data = new FormData();\n\t\n\t            data.append('csrf', window.csrf);\n\t            data.append('repeatEmail', true);\n\t\n\t            codex.ajax.call({\n\t                url: '/user/passchange',\n\t                type: 'POST',\n\t                data: data,\n\t                success: function () {\n\t\n\t                    button_.classList.remove('loading');\n\t\n\t                    codex.alerts.show({\n\t                        type: 'success',\n\t                        message: 'Мы отправили на вашу почту письмо'\n\t                    });\n\t\n\t                },\n\t                error: function () {\n\t\n\t                    button_.classList.remove('loading');\n\t\n\t                    codex.alerts.show({\n\t                        type: 'error',\n\t                        message: 'Произошла ошибка'\n\t                    });\n\t\n\t                }\n\t            });\n\t\n\t        };\n\t\n\t        var ajaxResponse = function (response) {\n\t\n\t            button.classList.remove('loading');\n\t\n\t            try {\n\t\n\t                response = JSON.parse(response);\n\t\n\t            } catch (e) {\n\t\n\t                response = {success: 0, message: 'Произошла ошибка'};\n\t\n\t            }\n\t\n\t            if (!response.success) {\n\t\n\t                if (input) input.classList.add('form__input--invalid');\n\t\n\t                codex.alerts.show({\n\t                    type: 'error',\n\t                    message:response.message\n\t                });\n\t\n\t\n\t            } else {\n\t\n\t                showSuccessMessage();\n\t                return;\n\t\n\t            }\n\t\n\t\n\t        };\n\t\n\t        /**\n\t         * Shows success email sending message\n\t         *\n\t         */\n\t        var showSuccessMessage = function () {\n\t\n\t            codex.alerts.show({\n\t                type: 'success',\n\t                message: 'Мы выслали инструкцию на вашу почту'\n\t            });\n\t\n\t            form.classList.add('hide');\n\t\n\t            form = document.getElementById('change-password-success');\n\t            form.classList.remove('hide');\n\t\n\t        };\n\t\n\t        return {\n\t            showForm: showForm,\n\t            requestChange: requestChange,\n\t            set: set,\n\t            repeatEmail: repeatEmail,\n\t        };\n\t\n\t    }();\n\t\n\t    /**\n\t     * Working with bio\n\t     */\n\t    var bio = function () {\n\t\n\t        /**\n\t         * Edited textarea cache\n\t         * @type {Element|null}\n\t         */\n\t        var textarea = null;\n\t\n\t        /**\n\t         * Edit bio click handler;\n\t         * @param {Element} button  - button clicked\n\t         */\n\t        var edit = function ( button ) {\n\t\n\t            var opened = button.querySelector('textarea');\n\t\n\t            if (opened) {\n\t\n\t                return;\n\t\n\t            }\n\t\n\t            textarea = document.createElement('TEXTAREA');\n\t            textarea.innerHTML = button.textContent.trim();\n\t            textarea.addEventListener('keydown', keydown);\n\t\n\t            button.innerHTML = '';\n\t            button.appendChild(textarea);\n\t\n\t            textarea.focus();\n\t\n\t            /** Fire autoresize */\n\t            codex.autoresizeTextarea.addListener(textarea);\n\t\n\t        };\n\t\n\t        /**\n\t         * Bio textarea keydowns\n\t         * Sends via AJAX by ENTER\n\t         */\n\t        var keydown = function ( event ) {\n\t\n\t            if ( event.keyCode == codex.core.keys.ENTER ) {\n\t\n\t                send(this.value);\n\t                event.preventDefault();\n\t\n\t            }\n\t\n\t        };\n\t\n\t        /**\n\t         * Sends bio field\n\t         * @param  {String} val textarea value\n\t         */\n\t        var send = function (val) {\n\t\n\t            if (!val.trim()) {\n\t\n\t                codex.alerts.show({\n\t                    type: 'error',\n\t                    message: 'Write something about yourself'\n\t                });\n\t                return;\n\t\n\t            }\n\t\n\t            var formData = new FormData();\n\t\n\t            formData.append('bio', val);\n\t            formData.append('csrf', window.csrf);\n\t\n\t            codex.ajax.call({\n\t                type : 'POST',\n\t                url : '/user/updateBio',\n\t                data : formData,\n\t                beforeSend: beforeSend,\n\t                success : saved\n\t            });\n\t\n\t        };\n\t\n\t        /**\n\t         * Simple beforeSend method\n\t         */\n\t        var beforeSend = function () {\n\t\n\t            textarea.classList.add('loading');\n\t\n\t        };\n\t\n\t        /**\n\t         * Success saving callback\n\t         */\n\t        var saved = function (response) {\n\t\n\t            response = JSON.parse(response);\n\t\n\t            if (!response.success || !response.bio) {\n\t\n\t                textarea.classList.remove('loading');\n\t                codex.alerts.show({\n\t                    type: 'error',\n\t                    message: 'Saving error, sorry'\n\t                });\n\t                return;\n\t\n\t            }\n\t\n\t            var newBio = document.createTextNode(response.bio || '');\n\t\n\t            /** Update user's CSRF token */\n\t            window.csrf = response.csrf;\n\t\n\t            codex.core.replace(textarea, newBio);\n\t\n\t        };\n\t\n\t        return {\n\t            edit: edit\n\t        };\n\t\n\t    }();\n\t\n\t    var email = function () {\n\t\n\t        var currentEmail    = null,\n\t            loadingButton   = null;\n\t\n\t        var saved = function (response) {\n\t\n\t            try {\n\t\n\t                response = JSON.parse(response);\n\t\n\t                if (response.success) {\n\t\n\t                    codex.core.replace(currentEmail.parentNode, codex.core.parseHTML(response.island)[0]);\n\t\n\t                    codex.alerts.show({\n\t                        type: 'success',\n\t                        message: 'Адрес почты обновлен. Теперь вам нужно подтвердить его, перейдя по ссылке в письме.'\n\t                    });\n\t\n\t                    currentEmail = null;\n\t                    return;\n\t\n\t                }\n\t\n\t            } catch (e) {}\n\t\n\t            loadingButton.classList.remove('loading');\n\t\n\t            codex.alerts.show({\n\t                type: 'error',\n\t                message: response.message || 'Произошла ошибка, попробуйте позже'\n\t            });\n\t\n\t        };\n\t\n\t        var send = function () {\n\t\n\t            if (currentEmail.value.trim() == '') {\n\t\n\t                codex.alerts.show({\n\t                    type: 'error',\n\t                    message: 'Введите email'\n\t                });\n\t\n\t                return;\n\t\n\t            }\n\t\n\t            loadingButton = this;\n\t            loadingButton.classList.add('loading');\n\t\n\t            var data = new FormData();\n\t\n\t            data.append('email', currentEmail.value);\n\t            data.append('csrf', window.csrf);\n\t\n\t            codex.ajax.call({\n\t                url: 'user/changeEmail',\n\t                type: 'POST',\n\t                data: data,\n\t                success: saved,\n\t                error: saved\n\t            });\n\t\n\t        };\n\t\n\t        var sendConfirmation = function (button) {\n\t\n\t            var success = function (response) {\n\t\n\t                response = JSON.parse(response);\n\t\n\t                codex.alerts.show({\n\t                    type: 'success',\n\t                    message: response.message\n\t                });\n\t                button.classList.remove('loading');\n\t\n\t            };\n\t\n\t            button.classList.add('loading');\n\t\n\t            codex.ajax.call({\n\t                url: '/ajax/confirmation-email',\n\t                success: success\n\t            });\n\t\n\t        };\n\t\n\t        var changed = function (input) {\n\t\n\t            if (currentEmail) {\n\t\n\t                return;\n\t\n\t            }\n\t\n\t            currentEmail = input;\n\t\n\t            var saveButton = document.createElement('BUTTON'),\n\t                sendButton = input.parentNode.querySelector('button');\n\t\n\t            if (sendButton) sendButton.classList.remove('master');\n\t\n\t            saveButton.classList.add('button', 'master');\n\t            saveButton.textContent = 'Сохранить';\n\t\n\t            saveButton.addEventListener('click', send);\n\t\n\t            input.oninput = null;\n\t            input.parentNode.appendChild(saveButton);\n\t\n\t        };\n\t\n\t        var set = function (button) {\n\t\n\t            button.classList.add('hide');\n\t\n\t            var form = document.getElementById('set-email-form');\n\t\n\t            form.classList.remove('hide');\n\t\n\t            currentEmail = document.getElementById('set-email-input');\n\t\n\t        };\n\t\n\t        return {\n\t            sendConfirmation: sendConfirmation,\n\t            changed: changed,\n\t            send: send,\n\t            set: set,\n\t        };\n\t\n\t    }();\n\t\n\t\n\t    return {\n\t        changePassword: changePassword,\n\t        promote: promote,\n\t        photo: photo,\n\t        bio : bio,\n\t        email: email,\n\t    };\n\t\n\t}();\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tvar sharer = {\n\t\n\t    init : function () {\n\t\n\t        var shareButtons = document.querySelectorAll('.js-share');\n\t\n\t        for (var i = shareButtons.length - 1; i >= 0; i--) {\n\t\n\t            shareButtons[i].addEventListener('click', sharer.click, true);\n\t\n\t        }\n\t\n\t    },\n\t\n\t    shareVk : function (data) {\n\t\n\t        var link  = 'https://vk.com/share.php?';\n\t\n\t        link += 'url='          + data.url;\n\t        link += '&title='       + data.title;\n\t        link += '&description=' + data.desc;\n\t        link += '&image='       + data.img;\n\t        link += '&noparse=true';\n\t\n\t        this.popup( link, 'vkontakte'  );\n\t\n\t    },\n\t\n\t    shareFacebook : function (data) {\n\t\n\t        var FB_APP_ID = 1740455756240878,\n\t            link      = 'https://www.facebook.com/dialog/share?display=popup';\n\t\n\t        link += '&app_id='       + FB_APP_ID;\n\t        link += '&href='         + data.url;\n\t        link += '&redirect_uri=' + document.location.href;\n\t\n\t        this.popup( link, 'facebook' );\n\t\n\t    },\n\t\n\t    shareTwitter : function (data) {\n\t\n\t        var link = 'https://twitter.com/share?';\n\t\n\t        link += 'text='      + data.title;\n\t        link += '&url='      + data.url;\n\t        link += '&counturl=' + data.url;\n\t\n\t        this.popup( link, 'twitter' );\n\t\n\t    },\n\t\n\t    shareTelegram : function (data) {\n\t\n\t        var link  = 'https://telegram.me/share/url';\n\t\n\t        link += '?text=' + data.title;\n\t        link += '&url='  + data.url;\n\t\n\t        this.popup( link, 'telegram' );\n\t\n\t    },\n\t\n\t    popup : function ( url, socialType ) {\n\t\n\t        window.open( url, '', 'toolbar=0,status=0,width=626,height=436' );\n\t\n\t        /**\n\t         * Write analytics goal\n\t         */\n\t        if ( window.yaCounter32652805 ) {\n\t\n\t            window.yaCounter32652805.reachGoal('article-share', function () {}, this, {type: socialType, url: url});\n\t\n\t        }\n\t\n\t    },\n\t\n\t    click : function (event) {\n\t\n\t        var target = event.target;\n\t\n\t        /**\n\t         * Social provider stores in data 'shareType' attribute on share-button\n\t         * But click may be fired on child-element in button, so we need to handle it.\n\t         */\n\t        var type = target.dataset.shareType || target.parentNode.dataset.shareType;\n\t\n\t        if (!sharer[type]) return;\n\t\n\t        /**\n\t         * Sanitize share params\n\t         * @todo test for taint strings\n\t         */\n\t            // for (key in window.shareData){\n\t            //      window.shareData[key] = encodeURIComponent(window.shareData[key]);\n\t            // }\n\t\n\t        var shareData = {\n\t\n\t            url:    target.dataset.url || target.parentNode.dataset.url,\n\t            title:  target.dataset.title || target.parentNode.dataset.title,\n\t            desc:   target.dataset.desc || target.parentNode.dataset.desc,\n\t            img:    target.dataset.img || target.parentNode.dataset.title\n\t\n\t        };\n\t\n\t        /**\n\t         * Fire click handler\n\t         */\n\t\n\t        sharer[type](shareData);\n\t\n\t    }\n\t\n\t};\n\t\n\tmodule.exports = sharer;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Module for load and start codex-editor\n\t *\n\t * Using:\n\t *\n\t * codex.writing.prepare({\n\t *     holderId : 'placeForEditor',                                         // (required)\n\t *     hideEditorToolbar : <?= $hideEditorToolbar ? 'true' : 'false' ?>,\n\t *     items : <?= json_encode($page->blocks) ?: '[]' ?>,\n\t *     pageId   : <?= $page->id ?>,\n\t *     parentId : <?= $page->id_parent ?>,\n\t * }).then(\n\t *    codex.writing.init\n\t * );\n\t */\n\t\n\t\n\tmodule.exports = (function () {\n\t\n\t    var editorIsReady = false,\n\t        submitButton = null,\n\t        settings = {\n\t            hideEditorToolbar   : false,\n\t            titleId             : 'editorWritingTitle',\n\t            initialBlockPlugin  : 'paragraph',\n\t            data                : {items: []},\n\t            resources           : [],\n\t            holderId            : null,\n\t            pageId              : 0,\n\t            parentId            : 0,\n\t        };\n\t\n\t    /**\n\t     * Prepare editor's resourses\n\t     *\n\t     * @param  {Object} initSettings    base settings for editor\n\t     * @return {Promise}            all editor's resources are ready\n\t     */\n\t    var prepare = function (initSettings) {\n\t\n\t        mergeSettings(initSettings);\n\t\n\t        return loadEditorResources(settings.resources)\n\t                .then(function () {\n\t\n\t                    editorIsReady = true;\n\t\n\t                });\n\t\n\t    };\n\t\n\t    /**\n\t     * Fill module's settings by settings from params\n\t     *\n\t     * @param  {Object} initSettings  list of params from init\n\t     */\n\t    function mergeSettings(initSettings) {\n\t\n\t        for (var key in initSettings) {\n\t\n\t            settings[key] = initSettings[key];\n\t\n\t        }\n\t\n\t    }\n\t\n\t    /**\n\t     * Run editor\n\t     */\n\t    function startEditor() {\n\t\n\t        /**\n\t         * @todo get from server\n\t         */\n\t        var EDITOR_IMAGE = 1;\n\t        var EDITOR_FILE  = 2;\n\t\n\t        codex.editor.start({\n\t\n\t            holderId:  settings.holderId,\n\t            initialBlockPlugin : settings.initialBlockPlugin,\n\t            hideToolbar: settings.hideEditorToolbar,\n\t            sanitizer: {\n\t                tags : {\n\t                    p : {},\n\t                    a : {\n\t                        href: true,\n\t                        target: '_blank'\n\t                    }\n\t                }\n\t            },\n\t            tools : {\n\t                paragraph: {\n\t                    type               : 'paragraph',\n\t                    iconClassname      : 'ce-icon-paragraph',\n\t                    render             : window.paragraph.render,\n\t                    validate           : window.paragraph.validate,\n\t                    save               : window.paragraph.save,\n\t                    allowedToPaste     : true,\n\t                    showInlineToolbar  : true,\n\t                    destroy            : window.paragraph.destroy,\n\t                    allowRenderOnPaste : true\n\t                },\n\t                header: {\n\t                    type             : 'header',\n\t                    iconClassname    : 'ce-icon-header',\n\t                    appendCallback   : window.header.appendCallback,\n\t                    makeSettings     : window.header.makeSettings,\n\t                    render           : window.header.render,\n\t                    validate         : window.header.validate,\n\t                    save             : window.header.save,\n\t                    destroy          : window.header.destroy,\n\t                    displayInToolbox : true\n\t                },\n\t                image: {\n\t                    type                  : 'image',\n\t                    iconClassname         : 'ce-icon-picture',\n\t                    appendCallback        : window.image.appendCallback,\n\t                    prepare               : window.image.prepare,\n\t                    makeSettings          : window.image.makeSettings,\n\t                    render                : window.image.render,\n\t                    save                  : window.image.save,\n\t                    destroy               : window.image.destroy,\n\t                    isStretched           : true,\n\t                    showInlineToolbar     : true,\n\t                    displayInToolbox      : true,\n\t                    renderOnPastePatterns : window.image.pastePatterns,\n\t                    config: {\n\t                        uploadImage : '/upload/' + EDITOR_IMAGE,\n\t                        uploadFromUrl : ''\n\t                    }\n\t                },\n\t                attaches: {\n\t                    type             : 'attaches',\n\t                    displayInToolbox : true,\n\t                    iconClassname    : 'cdx-attaches__icon',\n\t                    prepare          : window.cdxAttaches.prepare,\n\t                    render           : window.cdxAttaches.render,\n\t                    save             : window.cdxAttaches.save,\n\t                    validate         : window.cdxAttaches.validate,\n\t                    destroy          : window.cdxAttaches.destroy,\n\t                    appendCallback   : window.cdxAttaches.appendCallback,\n\t                    config: {\n\t                        fetchUrl: '/upload/' + EDITOR_FILE,\n\t                        maxSize: 25000,\n\t                    }\n\t                },\n\t                list: {\n\t                    type: 'list',\n\t                    iconClassname: 'ce-icon-list-bullet',\n\t                    make: window.list.make,\n\t                    appendCallback: null,\n\t                    makeSettings: window.list.makeSettings,\n\t                    render: window.list.render,\n\t                    validate: window.list.validate,\n\t                    save: window.list.save,\n\t                    destroy: window.list.destroy,\n\t                    displayInToolbox: true,\n\t                    showInlineToolbar: true,\n\t                    enableLineBreaks: true,\n\t                    allowedToPaste: true\n\t                }\n\t            },\n\t\n\t            data : settings.data\n\t        });\n\t\n\t        var titleInput = document.getElementById(settings.titleId);\n\t\n\t        /**\n\t         * Focus at the title\n\t         */\n\t        titleInput.focus();\n\t        titleInput.addEventListener('keydown', titleKeydownHandler );\n\t\n\t    }\n\t\n\t    /**\n\t     * Title input keydowns\n\t     * @description  By ENTER, sets focus on editor\n\t     * @param  {Event} event  - keydown event\n\t     */\n\t    var titleKeydownHandler = function (event) {\n\t\n\t        /* Set focus on Editor by Enter     */\n\t        if ( event.keyCode == codex.core.keys.ENTER ) {\n\t\n\t            event.preventDefault();\n\t\n\t            focusRedactor();\n\t\n\t        }\n\t\n\t    };\n\t\n\t    /**\n\t     * Temporary scheme to focus Codex Editor first-block\n\t     */\n\t    var focusRedactor = function () {\n\t\n\t        var firstBlock       = codex.editor.nodes.redactor.firstChild,\n\t            contentHolder    = firstBlock.firstChild,\n\t            firstToolWrapper = contentHolder.firstChild,\n\t            aloneTextNode;\n\t\n\t        /**\n\t         * Caret will not be placed in empty textNode, so we need textNode with zero-width char\n\t         */\n\t        aloneTextNode = document.createTextNode('\\u200B');\n\t\n\t        /**\n\t         * We need to append manually created textnode before returning\n\t         */\n\t        firstToolWrapper.appendChild(aloneTextNode);\n\t\n\t        codex.editor.caret.set(firstToolWrapper, 0, 0);\n\t\n\t    };\n\t\n\t    /**\n\t     * Public function for run editor\n\t     */\n\t    var init = function () {\n\t\n\t        if (!editorIsReady) return;\n\t\n\t        startEditor();\n\t\n\t    };\n\t\n\t    /**\n\t     * Show form and hide placeholder\n\t     *\n\t     * @param  {Element} targetClicked       placeholder with wrapper\n\t     * @param  {String}  formId               remove 'hide' from this form by id\n\t     * @param  {String}  hidePlaceholderClass add this class to placeholder\n\t     */\n\t    var open = function (targetClicked, formId, hidePlaceholderClass) {\n\t\n\t        if (!editorIsReady) return;\n\t\n\t        var holder = targetClicked;\n\t\n\t        document.getElementById(formId).classList.remove('hide');\n\t        holder.classList.add(hidePlaceholderClass);\n\t        holder.onclick = null;\n\t\n\t        init();\n\t\n\t    };\n\t\n\t    /**\n\t     * Load editor resources and append block with them to body\n\t     *\n\t     * @param  {Array} resources list of resources which should be loaded\n\t     * @return {Promise}\n\t     */\n\t    var loadEditorResources = function (resources) {\n\t\n\t        return Promise.all(\n\t            resources.map(loadResource)\n\t        );\n\t\n\t    };\n\t\n\t    /**\n\t     * Loads resource\n\t     *\n\t     * @param  {Object} resource name and paths for js and css\n\t     * @return {Promise}\n\t     */\n\t    function loadResource(resource) {\n\t\n\t        var name      = resource.name,\n\t            scriptUrl = resource.path.script,\n\t            styleUrl  = resource.path.style;\n\t\n\t        return Promise.all([\n\t            codex.loader.importScript(scriptUrl, name),\n\t            codex.loader.importStyle(styleUrl, name)\n\t        ]);\n\t\n\t    }\n\t\n\t    /**\n\t    * Prepares form to submit\n\t    */\n\t    var getForm = function () {\n\t\n\t        var atlasForm = document.forms.atlas;\n\t\n\t        if (!atlasForm) return;\n\t\n\t        /** CodeX.Editor */\n\t        var JSONinput = document.createElement('TEXTAREA');\n\t\n\t        JSONinput.name   = 'content';\n\t        JSONinput.id     = 'json_result';\n\t        JSONinput.hidden = true;\n\t        atlasForm.appendChild(JSONinput);\n\t\n\t        /**\n\t         * Save blocks\n\t         */\n\t        codex.editor.saver.saveBlocks();\n\t\n\t        return atlasForm;\n\t\n\t    };\n\t\n\t    /**\n\t     * Send ajax request with writing form data\n\t     * @param button - submit button (needed to add loading animation)\n\t     */\n\t    var submit = function (button) {\n\t\n\t        var title = document.forms.atlas.elements['title'],\n\t            form;\n\t\n\t        if (title.value.trim() === '') {\n\t\n\t            codex.editor.notifications.notification({\n\t                type: 'warn',\n\t                message: 'Заполните заголовок'\n\t            });\n\t\n\t            return;\n\t\n\t        }\n\t\n\t        form = getForm();\n\t\n\t        submitButton = button;\n\t\n\t        submitButton.classList.add('loading');\n\t\n\t        window.setTimeout(function () {\n\t\n\t            form.elements['content'].innerHTML = JSON.stringify({items: codex.editor.state.jsonOutput});\n\t\n\t            codex.ajax.call({\n\t                url: '/p/save',\n\t                data: new FormData(form),\n\t                success: submitResponse,\n\t                type: 'POST'\n\t            });\n\t\n\t        }, 500);\n\t\n\t    };\n\t\n\t    /**\n\t     * Response handler for page saving\n\t     * @param response\n\t     */\n\t    var submitResponse = function (response) {\n\t\n\t        submitButton.classList.remove('loading');\n\t\n\t        response = JSON.parse(response);\n\t\n\t        if (response.success) {\n\t\n\t            window.location = response.redirect;\n\t            return;\n\t\n\t        }\n\t\n\t        codex.editor.notifications.notification({\n\t            type: 'warn',\n\t            message: response.message\n\t        });\n\t\n\t    };\n\t\n\t    /**\n\t    * Submits writing form for opening in full-screan page without saving\n\t    */\n\t    var openEditorFullscreen = function () {\n\t\n\t\n\t        var form = getForm();\n\t\n\t        window.setTimeout(function () {\n\t\n\t            form.elements['content'].innerHTML = JSON.stringify({ items: codex.editor.state.jsonOutput });\n\t\n\t            form.submit();\n\t\n\t        }, 500);\n\t\n\t    };\n\t\n\t    return {\n\t        init    : init,\n\t        prepare : prepare,\n\t        open    : open,\n\t        openEditorFullscreen : openEditorFullscreen,\n\t        submit               : submit,\n\t    };\n\t\n\t})();\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\n\t    prefixJS : 'cdx-script-',\n\t\n\t    prefixCSS : 'cdx-style-',\n\t\n\t    importScript : function (scriptPath, instanceName) {\n\t\n\t        return new Promise(function (resolve, reject) {\n\t\n\t            var script;\n\t\n\t            /** Script is already loaded */\n\t            if ( !instanceName ) {\n\t\n\t                reject('Instance name is missed');\n\t\n\t            } else if ( document.getElementById(this.prefixJS + instanceName) ) {\n\t\n\t                resolve(scriptPath);\n\t\n\t            }\n\t\n\t            script = document.createElement('SCRIPT');\n\t            script.async = true;\n\t            script.defer = true;\n\t            script.id    = codex.loader.prefixJS + instanceName;\n\t\n\t            script.onload = function () {\n\t\n\t                resolve(scriptPath);\n\t\n\t            };\n\t\n\t            script.onerror = function () {\n\t\n\t                reject(scriptPath);\n\t\n\t            };\n\t\n\t            script.src = scriptPath;\n\t            document.head.appendChild(script);\n\t\n\t        });\n\t\n\t    },\n\t\n\t    importStyle : function (stylePath, instanceName) {\n\t\n\t        return new Promise(function (resolve, reject) {\n\t\n\t            var style;\n\t\n\t            /** Style is already loaded */\n\t            if ( !instanceName ) {\n\t\n\t                reject('Instance name is missed');\n\t\n\t            } else if ( document.getElementById(this.prefixCSS + instanceName) ) {\n\t\n\t                resolve(stylePath);\n\t\n\t            }\n\t\n\t            style = document.createElement('LINK');\n\t            style.type = 'text/css';\n\t            style.href = stylePath;\n\t            style.rel  = 'stylesheet';\n\t            style.id   = codex.loader.prefixCSS + instanceName;\n\t\n\t            style.onload = function () {\n\t\n\t                resolve(stylePath);\n\t\n\t            };\n\t\n\t            style.onerror = function () {\n\t\n\t                reject(stylePath);\n\t\n\t            };\n\t\n\t            style.src = stylePath;\n\t            document.head.appendChild(style);\n\t\n\t        });\n\t\n\t    },\n\t\n\t};\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t/**\n\t* Module for scroll-up button\n\t* @author @scytem @guryn\n\t*/\n\t\n\t\n\tmodule.exports = (function () {\n\t\n\t\n\t    /**\n\t     * Scroll-up will be shown after sroll reaches this value\n\t     * @type {Number}\n\t     */\n\t    var offsetToShow = 300;\n\t\n\t    /**\n\t     * Size content width\n\t     * @type {Number}\n\t     */\n\t    var layoutWidth = 0;\n\t\n\t    /**\n\t     * Clickable Element that holds arrow\n\t     * @type {Element}\n\t     */\n\t    var clickableZone = null;\n\t\n\t    /**\n\t     * Window Resize stop watcher Timeout\n\t     * @type {timeoutId}\n\t     */\n\t    var resizeStopWatcher = null;\n\t\n\t    /**\n\t     * @public\n\t     *\n\t     * Init method\n\t     * Fired after document is ready\n\t     */\n\t    var init = function ( layoutHolderId ) {\n\t\n\t        var layout = document.getElementById(layoutHolderId);\n\t\n\t        if (!layout) {\n\t\n\t            codex.core.log('Layout center-col ID wissed', 'scrollUp', 'warn');\n\t            return;\n\t\n\t        }\n\t\n\t        layoutWidth = layout.offsetWidth;\n\t\n\t        clickableZone = makeUI();\n\t\n\t        /** Bind click event on scroll-up button */\n\t        clickableZone.addEventListener('click', scrollPage);\n\t\n\t        /** Global window scroll handler */\n\t        window.addEventListener('scroll', windowScrollHandler);\n\t\n\t        /** Autoresize */\n\t        window.addEventListener('resize', sizeChanged, false);\n\t\n\t        /** Set size */\n\t        resize();\n\t\n\t        /* Check heigth */\n\t        windowScrollHandler();\n\t\n\t    };\n\t\n\t    /**\n\t    * Scroll the document to the begin position\n\t    * @param {number} yCoords Y-coordinate\n\t    */\n\t    var scrollPage = function (yCoords) {\n\t\n\t        window.scrollTo(0, yCoords);\n\t\n\t    };\n\t\n\t    /**\n\t    * Hiding Scroll-up button if user on the top of page\n\t    */\n\t    var windowScrollHandler = function () {\n\t\n\t        var notTheTop = window.pageYOffset > offsetToShow;\n\t\n\t        if (notTheTop) {\n\t\n\t            clickableZone.classList.add('show');\n\t\n\t        } else {\n\t\n\t            clickableZone.classList.remove('show');\n\t\n\t        }\n\t\n\t    };\n\t\n\t    /**\n\t    * Resize hover/click area touching user width of screen\n\t    */\n\t    var resize = function () {\n\t\n\t        var windowWidth     = document.body.clientWidth,\n\t            leftColumtWidth = (windowWidth - layoutWidth) / 2;\n\t\n\t        clickableZone.style.width = leftColumtWidth + 'px';\n\t\n\t    };\n\t\n\t\n\t    /**\n\t    * Delay for resize\n\t    */\n\t    var sizeChanged = function () {\n\t\n\t        if ( resizeStopWatcher ) {\n\t\n\t            window.clearTimeout(resizeStopWatcher);\n\t\n\t        }\n\t\n\t        resizeStopWatcher = window.setTimeout(resize, 150);\n\t\n\t    };\n\t\n\t    /**\n\t     * Makes scroll-up arrow and wrapper\n\t     */\n\t    var makeUI = function () {\n\t\n\t        var wrapper = document.createElement('DIV'),\n\t            arrow   = document.createElement('DIV');\n\t\n\t        wrapper.classList.add('scroll-up');\n\t        arrow.classList.add('scroll-up__arrow');\n\t\n\t        wrapper.appendChild(arrow);\n\t        document.body.appendChild(wrapper);\n\t\n\t        return wrapper;\n\t\n\t    };\n\t\n\t    return {\n\t        init: init\n\t    };\n\t\n\t}());\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Admin module\n\t */\n\t\n\tmodule.exports = (function () {\n\t\n\t    var emptyBrandingClass = 'branding--empty';\n\t    var loadingClass       = 'branding--loading';\n\t    var preloaderClass     = 'branding__preloader';\n\t    var preloadShown       = 'branding__preloader--shown';\n\t\n\t    /**\n\t     * Branding holder\n\t     * @type {Element|null}\n\t     */\n\t    var wrapper = null;\n\t\n\t    /**\n\t     * Initialization\n\t     * @fires preload\n\t     */\n\t    var init = function () {\n\t\n\t        wrapper = document.getElementById('brandingSection');\n\t\n\t        if ( !wrapper ) {\n\t\n\t            return;\n\t\n\t        }\n\t\n\t        var url = wrapper.dataset.src;\n\t\n\t        preload( url );\n\t\n\t    };\n\t\n\t    /**\n\t     * Shows blurred preview and change it to the full-view image\n\t     * @param  {String} fullUrl          - URL of original image\n\t     * @return {String|null} previewUrl  - pass to renew preloader\n\t     */\n\t    var preload = function ( fullUrl, previewUrl ) {\n\t\n\t        var preloader = wrapper.querySelector('.' + preloaderClass),\n\t            img = document.createElement('IMG');\n\t\n\t        if ( previewUrl ) {\n\t\n\t            preloader.style.backgroundImage = \"url('\" + previewUrl + \"')\";\n\t            preloader.classList.add(preloadShown);\n\t\n\t        }\n\t\n\t        img.src = fullUrl;\n\t        img.onload = function () {\n\t\n\t            wrapper.style.backgroundImage = \"url('\" + fullUrl + \"')\";\n\t            preloader.classList.remove(preloadShown);\n\t\n\t        };\n\t\n\t    };\n\t\n\t\n\t\n\t    /**\n\t     * changes site branding\n\t     * @private\n\t     */\n\t    var change = function () {\n\t\n\t        codex.transport.init({\n\t\n\t            url : '/upload/4',\n\t            accept : 'image/*',\n\t            beforeSend: function () {\n\t\n\t                wrapper.classList.add(loadingClass);\n\t\n\t            },\n\t            success : function (result) {\n\t\n\t                var response = JSON.parse(result),\n\t                    url,\n\t                    preview;\n\t\n\t                wrapper.classList.remove(loadingClass);\n\t\n\t                if ( response.success ) {\n\t\n\t                    url = response.data.url;\n\t                    preview = '/upload/branding/preload_' + response.data.name + '.jpg';\n\t\n\t                    if ( wrapper.classList.contains(emptyBrandingClass) ) {\n\t\n\t                        wrapper.classList.remove(emptyBrandingClass);\n\t\n\t                    }\n\t\n\t                    preload( url, preview );\n\t\n\t                } else {\n\t\n\t                    codex.alerts.show({\n\t                        type: 'error',\n\t                        message: 'Uploading failed'\n\t                    });\n\t\n\t                }\n\t\n\t            },\n\t            error: function () {\n\t\n\t                wrapper.classList.remove(loadingClass);\n\t\n\t                codex.alerts.show({\n\t                    type: 'error',\n\t                    message: 'Error while uploading branding image;'\n\t                });\n\t\n\t            }\n\t\n\t        });\n\t\n\t    };\n\t\n\t    return {\n\t        init: init,\n\t        change : change\n\t    };\n\t\n\t})({});\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t/**\n\t * Page significant methods\n\t */\n\tmodule.exports = (function () {\n\t\n\t    /**\n\t     * Saves current clicked item in page drop-down menu\n\t     * @type {Element}\n\t     */\n\t    var currentItemClicked = null;\n\t\n\t    /**\n\t     * Opens page-writing form\n\t     */\n\t    var openWriting = function () {\n\t\n\t        currentItemClicked = this;\n\t\n\t        var targetId = currentItemClicked.dataset.id;\n\t\n\t        document.location = '/p/writing?id=' + targetId;\n\t\n\t    };\n\t\n\t    /**\n\t     * Opens page-writing form\n\t     */\n\t    var remove = function () {\n\t\n\t        currentItemClicked = this;\n\t\n\t        var targetId    = currentItemClicked.dataset.id;\n\t\n\t        if (!window.confirm('Подтвердите удаление страницы')) {\n\t\n\t            return;\n\t\n\t        }\n\t\n\t        codex.ajax.call({\n\t            url : '/p/' + targetId + '/delete',\n\t            success: removeHandler\n\t        });\n\t\n\t    };\n\t\n\t    /**\n\t     * Opens writing form for child page\n\t     */\n\t    var newChild = function () {\n\t\n\t        currentItemClicked = this;\n\t\n\t        var targetId = currentItemClicked.dataset.id;\n\t\n\t        document.location = '/p/writing?parent=' + targetId;\n\t\n\t    };\n\t\n\t    /**\n\t     * Send ajax request to add page to menu\n\t     */\n\t    var addToMenu = function () {\n\t\n\t        currentItemClicked = this;\n\t        currentItemClicked.classList.add('loading');\n\t\n\t        var targetId = currentItemClicked.dataset.id;\n\t\n\t        codex.ajax.call({\n\t            url : '/p/' + targetId + '/promote?list=menu',\n\t            success: promote\n\t        });\n\t\n\t    };\n\t\n\t    /**\n\t     * Send ajax request to add page to news\n\t     */\n\t    var addToNews = function () {\n\t\n\t        currentItemClicked = this;\n\t        currentItemClicked.classList.add('loading');\n\t\n\t        var targetId = currentItemClicked.dataset.id;\n\t\n\t        codex.ajax.call({\n\t            url : '/p/' + targetId + '/promote?list=news',\n\t            success: promote\n\t        });\n\t\n\t    };\n\t\n\t    /**\n\t     * Parse JSON response\n\t     * @param {JSON} response\n\t     * @returns {Object} response\n\t     */\n\t    var getResponse = function (response) {\n\t\n\t        try {\n\t\n\t            response = JSON.parse(response);\n\t\n\t        } catch(e) {\n\t\n\t            return {\n\t                success: 0,\n\t                message: 'Произошла ошибка, попробуйте позже'\n\t            };\n\t\n\t        }\n\t\n\t        return response;\n\t\n\t    };\n\t\n\t    /**\n\t     * Response handler for page remove\n\t     * @param response\n\t     */\n\t    var removeHandler = function (response) {\n\t\n\t        response = getResponse(response);\n\t\n\t        if (response.success) {\n\t\n\t            window.location.replace(response.redirect);\n\t            return;\n\t\n\t        }\n\t\n\t        codex.alerts.show({\n\t            type: 'error',\n\t            message: response.message\n\t        });\n\t\n\t    };\n\t\n\t    /**\n\t     * Response handler for page promotion\n\t     * @param response\n\t     */\n\t    var promote = function (response) {\n\t\n\t        response = getResponse(response);\n\t        currentItemClicked.classList.remove('loading');\n\t\n\t        if (response.success) {\n\t\n\t            if (response.buttonText) {\n\t\n\t                replaceMenu(currentItemClicked, response.buttonText);\n\t\n\t            }\n\t\n\t            if (response.menu) {\n\t\n\t                updateSiteMenu(response.menu);\n\t\n\t            }\n\t\n\t            /**\n\t             * TODO: сделать замену текста кнопки\n\t             **/\n\t\n\t            codex.alerts.show({\n\t                type: 'success',\n\t                message: response.message\n\t            });\n\t\n\t            return;\n\t\n\t        }\n\t\n\t        codex.alerts.show({\n\t            type: 'error',\n\t            message: response.message\n\t        });\n\t\n\t    };\n\t\n\t    /**\n\t     * Replace site menu with new button text from server response\n\t     * @param currentItemMenu\n\t     * @param newResponseMenuText\n\t     */\n\t    var replaceMenu = function (currentItemMenu, newResponseMenuText) {\n\t\n\t        var itemIndex = currentItemMenu.dataset.itemIndex,\n\t            menuIndex = currentItemMenu.dataset.index;\n\t\n\t        /** update item on menu */\n\t        codex.islandSettings.updateItem(menuIndex, itemIndex, newResponseMenuText);\n\t\n\t        /** update item text immediatelly */\n\t        currentItemMenu.textContent = newResponseMenuText;\n\t\n\t    };\n\t\n\t    /**\n\t     * Replace site menu with menu form server response\n\t     *\n\t     * @param menu\n\t     */\n\t    var updateSiteMenu = function (menu) {\n\t\n\t        var oldMenu = document.getElementById('js-site-menu'),\n\t            newMenu = codex.core.parseHTML(menu)[0];\n\t\n\t        codex.core.replace(oldMenu, newMenu);\n\t\n\t    };\n\t\n\t\n\t    return {\n\t        openWriting: openWriting,\n\t        newChild: newChild,\n\t        addToMenu: addToMenu,\n\t        addToNews: addToNews,\n\t        remove : remove\n\t    };\n\t\n\t}());\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// public/build/bundle.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3b94369ab9279f5b0c7c","/**\n* Require CSS build\n*/\nrequire('../css/main.css');\n\n/**\n* Codex client\n* @author Savchenko Peter <specc.dev@gmail.com>\n*/\ncodex = (function (codex) {\n\n    'use strict';\n\n    /**\n    * Static nodes cache\n    */\n    codex.nodes = {\n        content : null\n    };\n\n    codex.init = function () {\n\n        /**\n        * Stylize custom checkboxes\n        */\n        codex.content.customCheckboxes.init();\n\n        /**\n        * Init approval buttons\n        */\n        codex.content.approvalButtons.init();\n\n        codex.autoresizeTextarea.init();\n\n        /**\n         * Activate scroll-up button\n         */\n        codex.scrollUp.init('js-layout-holder');\n\n        /**\n         * Client is ready\n         */\n        codex.core.log('Initialized', 'CodeX', 'info');\n\n        /**\n         * Initiate branding preload\n         */\n        codex.branding.init();\n\n    };\n\n    return codex;\n\n})({});\n\n/**\n* Document ready handler\n*/\ncodex.docReady = function (f) {\n\n    /in/.test(document.readyState) ? window.setTimeout(codex.docReady, 9, f) : f();\n\n};\n\n\n/**\n* Load modules\n*/\ncodex.core               = require('./modules/core');\ncodex.ajax               = require('./modules/ajax');\ncodex.transport          = require('./modules/transport');\ncodex.content            = require('./modules/content');\ncodex.appender           = require('./modules/appender');\ncodex.parser             = require('./modules/parser');\ncodex.comments           = require('./modules/comments');\ncodex.alerts             = require('./modules/alerts');\ncodex.islandSettings     = require('./modules/islandSettings');\ncodex.autoresizeTextarea = require('./modules/autoresizeTextarea');\ncodex.user               = require('./modules/user');\ncodex.sharer             = require('./modules/sharer');\ncodex.writing            = require('./modules/writing');\ncodex.loader             = require('./modules/loader');\ncodex.scrollUp           = require('./modules/scrollUp');\ncodex.branding           = require('./modules/branding');\ncodex.pages              = require('./modules/pages');\n\n\nmodule.exports = codex;\n\ncodex.docReady(function () {\n\n    codex.init();\n\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/main.js\n// module id = 0\n// module chunks = 0","/**\n* Significant core methods\n*/\n\nmodule.exports = {\n\n    /** Logging method */\n    log : function (str, prefix, type, arg) {\n\n        var staticLength = 32;\n\n        if (prefix) {\n\n            prefix = prefix.length < staticLength ? prefix : prefix.substr( 0, staticLength - 2 );\n\n            while (prefix.length < staticLength - 1) {\n\n                prefix += ' ';\n\n            }\n\n            prefix += ':';\n            str = prefix + str;\n\n        }\n\n        type = type || 'log';\n\n        try {\n\n            if ('console' in window && window.console[ type ]) {\n\n                if (arg) console[type](str, arg);\n                else console[type](str);\n\n            }\n\n        } catch(e) {}\n\n    },\n\n    /**\n    * @return {object} dom element real offset\n    */\n    getOffset : function (elem) {\n\n        var docElem, win, rect, doc;\n\n        if (!elem) {\n\n            return;\n\n        }\n\n        /**\n        * Support: IE <=11 only\n        * Running getBoundingClientRect on a\n        * disconnected node in IE throws an error\n        */\n        if (!elem.getClientRects().length) {\n\n            return {\n                top: 0,\n                left: 0\n            };\n\n        }\n\n        rect = elem.getBoundingClientRect();\n\n        /** Make sure element is not hidden (display: none) */\n        if (rect.width || rect.height) {\n\n            doc = elem.ownerDocument;\n            win = window;\n            docElem = doc.documentElement;\n\n            return {\n                top: rect.top + win.pageYOffset - docElem.clientTop,\n                left: rect.left + win.pageXOffset - docElem.clientLeft\n            };\n\n        }\n\n        /** Return zeros for disconnected and hidden elements (gh-2310) */\n        return rect;\n\n    },\n\n    /**\n    * Checks if element visible on screen at the moment\n    * @param {Element} - HTML NodeElement\n    */\n    isElementOnScreen : function (el) {\n\n        var elPositon    = codex.core.getOffset(el).top,\n            screenBottom = window.scrollY + window.innerHeight;\n\n        return screenBottom > elPositon;\n\n    },\n\n    /**\n    * Returns computed css styles for element\n    * @param {Element} el\n    */\n    css : function (el) {\n\n        return window.getComputedStyle(el);\n\n    },\n\n    /**\n    * Helper for inserting one element after another\n    */\n    insertAfter : function (target, element) {\n\n        target.parentNode.insertBefore(element, target.nextSibling);\n\n    },\n\n    /**\n    * Replaces node with\n    * @param {Element} nodeToReplace\n    * @param {Element} replaceWith\n    */\n    replace : function (nodeToReplace, replaceWith) {\n\n        return nodeToReplace.parentNode.replaceChild(replaceWith, nodeToReplace);\n\n    },\n\n    /**\n    * Helper for insert one element before another\n    */\n    insertBefore : function (target, element) {\n\n        target.parentNode.insertBefore(element, target);\n\n    },\n\n    /**\n    * Returns random {int} between numbers\n    */\n    random : function (min, max) {\n\n        return Math.floor(Math.random() * (max - min + 1)) + min;\n\n    },\n\n    /**\n    * Attach event to Element in parent\n    * @param {Element} parentNode    - Element that holds event\n    * @param {string} targetSelector - selector to filter target\n    * @param {string} eventName      - name of event\n    * @param {function} callback     - callback function\n    */\n    delegateEvent : function (parentNode, targetSelector, eventName, callback) {\n\n        parentNode.addEventListener(eventName, function (event) {\n\n            var el = event.target, matched;\n\n            while (el && !matched) {\n\n                matched = el.matches(targetSelector);\n\n                if (!matched) el = el.parentElement;\n\n            }\n\n            if (matched) {\n\n                callback.call(event.target, event, el);\n\n            }\n\n        }, true);\n\n    },\n\n\n    /**\n    * Readable DOM-node types map\n    */\n    nodeTypes : {\n        TAG     : 1,\n        TEXT    : 3,\n        COMMENT : 8,\n        DOCUMENT_FRAGMENT : 11\n    },\n\n    /**\n    * Readable keys map\n    */\n    keys : { BACKSPACE: 8, TAB: 9, ENTER: 13, SHIFT: 16, CTRL: 17, ALT: 18, ESC: 27, SPACE: 32, LEFT: 37, UP: 38, DOWN: 40, RIGHT: 39, DELETE: 46, META: 91 },\n\n    /**\n    * @protected\n    * Check object for DOM node\n    */\n    isDomNode : function (el) {\n\n        return el && typeof el === 'object' && el.nodeType && el.nodeType == this.nodeTypes.TAG;\n\n    },\n\n    /**\n    * Parses string to nodeList\n    * Removes empty text nodes\n    * @param {string} inputString\n    * @return {array} of nodes\n    *\n    * Does not supports <tr> and <td> on firts level of inputString\n    */\n\n    parseHTML : function (inputString) {\n\n        // var templatesSupported = spark.supports.templates();\n\n        var contentHolder,\n            childs,\n            parsedNodes = [];\n\n        // if ( false &&   templatesSupported ) {\n\n        //     contentHolder = document.createElement('template');\n        //     contentHolder.innerHTML = inputString.trim();\n\n        //     console.log(\"contentHolder: %o\", contentHolder);\n\n        //     childs = contentHolder.content.cloneNode(true).childNodes;\n\n        // } else {\n\n        contentHolder = document.createElement('div');\n        contentHolder.innerHTML = inputString.trim();\n\n        childs = contentHolder.childNodes;\n\n        // }\n\n\n        /**\n        * Iterate childNodes and remove empty Text Nodes on first-level\n        */\n        for (var i = 0, node; !!(node = childs[i]); i++) {\n\n            if (node.nodeType == codex.core.nodeTypes.TEXT && !node.textContent.trim()) {\n\n                continue;\n\n            }\n\n            parsedNodes.push(node);\n\n        }\n\n        return parsedNodes;\n\n    },\n\n    /**\n    * Checks passed object for emptiness\n    * @require ES5 - Object.keys\n    * @param {object}\n    */\n    isEmpty : function (obj) {\n\n        return Object.keys(obj).length === 0;\n\n    },\n\n    /**\n    * Check for Element visibility\n    * @param {Element} el\n    */\n    isVisible : function (el) {\n\n        return el.offsetParent !== null;\n\n    },\n\n    setCookie : function (name, value, expires, path, domain) {\n\n        var str = name + '=' + value;\n\n        if (expires) str += '; expires=' + expires.toGMTString();\n        if (path)    str += '; path=' + path;\n        if (domain)  str += '; domain=' + domain;\n\n        document.cookie = str;\n\n    },\n\n    getCookie : function (name) {\n\n        var dc = document.cookie;\n\n        var prefix = name + '=',\n            begin = dc.indexOf('; ' + prefix);\n\n        if (begin == -1) {\n\n            begin = dc.indexOf(prefix);\n            if (begin !== 0) return null;\n\n        } else\n            begin += 2;\n\n        var end = document.cookie.indexOf(';', begin);\n\n        if (end == -1) end = dc.length;\n\n        return unescape(dc.substring(begin + prefix.length, end));\n\n    },\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/core.js\n// module id = 3\n// module chunks = 0","/**\n* AJAX module\n*/\nvar ajax = (function () {\n\n    /**\n    * @usage codex.ajax.call();\n    */\n    var call = function (data) {\n\n        if (!data || !data.url) return;\n\n        var XMLHTTP          = window.XMLHttpRequest ? new window.XMLHttpRequest() : new window.ActiveXObject('Microsoft.XMLHTTP'),\n            successFunction  = function () {};\n\n        data.async           = true;\n        data.type            = data.type || 'GET';\n        data.data            = data.data || '';\n        data['content-type'] = data['content-type'] || 'application/json; charset=utf-8';\n        successFunction      = data.success || successFunction;\n\n        if (data.type == 'GET' && data.data) {\n\n            data.url = /\\?/.test(data.url) ? data.url + '&' + data.data : data.url + '?' + data.data;\n\n        }\n\n        if (data.withCredentials) {\n\n            XMLHTTP.withCredentials = true;\n\n        }\n\n        if (data.beforeSend && typeof data.beforeSend == 'function') {\n\n            data.beforeSend.call();\n\n        }\n\n        XMLHTTP.open(data.type, data.url, data.async);\n\n        /**\n        * If we send FormData, we need no content-type header\n        */\n        if (!isFormData(data.data)) {\n\n            XMLHTTP.setRequestHeader('Content-type', data['content-type']);\n\n        }\n\n        XMLHTTP.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n        XMLHTTP.onreadystatechange = function () {\n\n            if (XMLHTTP.readyState == 4 && XMLHTTP.status == 200) {\n\n                successFunction(XMLHTTP.responseText);\n\n            }\n\n        };\n\n        XMLHTTP.send(data.data);\n\n    };\n\n    /**\n     * Function for checking is it FormData object to send.\n     * @param {Object} object to check\n     * @return boolean\n     */\n    function isFormData(object) {\n\n        return typeof object.append === 'function';\n\n    };\n\n    return {\n\n        call : call\n\n    };\n\n}());\n\nmodule.exports = ajax;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/ajax.js\n// module id = 4\n// module chunks = 0","/**\n * File transport module\n *\n * @module Transport module. Uploads file and returns some response from server\n * @copyright Codex-Team 2017\n *\n * @example\n *\n * Basic usage :\n *  codex.transport.init( {\n *      url : fetchURL,\n *      multiple : bool,\n *      accept : string  // http://htmlbook.ru/html/input/accept\n *      beforeSend : Function,\n *      success : Function,\n *      error : Function\n * });\n *\n * You can handle all of this event like:\n *  - what should happen before data sending with XMLHTTP\n *  - what should after success request\n *  - error handler\n */\n\nmodule.exports = ( function (transport) {\n\n    /** Empty configuration */\n    var config_ = null;\n\n    /** File holder */\n    transport.input = null;\n\n    /** initialize module */\n    transport.init = function (configuration) {\n\n        if (!configuration.url) {\n\n            codex.core.log('can\\'t send request because `url` is missed', 'Transport module', 'error');\n            return;\n\n        }\n\n        config_ = configuration;\n\n        var inputElement = document.createElement('INPUT');\n\n        inputElement.type = 'file';\n\n        if (config_ && config_.multiple) {\n\n            inputElement.setAttribute('multiple', 'multiple');\n\n        }\n\n        if (config_ && config_.accept) {\n\n            inputElement.setAttribute('accept', config_.accept);\n\n        }\n\n        inputElement.addEventListener('change', send_, false);\n\n        /** Save input */\n        transport.input = inputElement;\n\n        /** click input to show upload window */\n        clickInput_();\n\n    };\n\n    var clickInput_ = function () {\n\n        transport.input.click();\n\n    };\n\n    var send_ = function () {\n\n        var url        = config_.url,\n            beforeSend = config_.beforeSend,\n            success    = config_.success,\n            error      = config_.error,\n            formData   = new FormData(),\n            files      = transport.input.files;\n\n        if (files.length > 1) {\n\n            for (var i = 0; i < files.length; i++) {\n\n                formData.append('files[]', files[i], files[i].name);\n\n            }\n\n        } else {\n\n            formData.append('files', files[0], files[0].name);\n\n        }\n\n        codex.ajax.call({\n            type : 'POST',\n            data : formData,\n            url : url,\n            beforeSend : beforeSend,\n            success : success,\n            error : error\n        });\n\n    };\n\n    return transport;\n\n})({});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/transport.js\n// module id = 5\n// module chunks = 0","/**\n* Operations with pages\n*/\nmodule.exports = (function () {\n\n     /**\n    * Toggles classname on passed blocks\n    * @param {string} selector\n    * @param {string} toggled classname\n    */\n    var toggle = function ( which, marker ) {\n\n        var elements = document.querySelectorAll( which );\n\n        for (var i = elements.length - 1; i >= 0; i--) {\n\n            elements[i].classList.toggle( marker );\n\n        }\n\n    };\n\n\n    /**\n    * Toggles mobile menu\n    * Handles clicks on the hamburger icon in header\n    */\n    var toggleMobileMenu = function ( event ) {\n\n        var menu = document.getElementById('js-mobile-menu-holder'),\n            openedClass = 'mobile-menu-holder--opened';\n\n        menu.classList.toggle(openedClass);\n\n        event.stopPropagation();\n        event.stopImmediatePropagation();\n        event.preventDefault();\n\n    };\n\n    /**\n    * Module uses for toggle custom checkboxes\n    * that has 'js-custom-checkbox' class and input[type=\"checkbox\"] included\n    * Example:\n    * <span class=\"js-custom-checkbox\">\n    *    <input type=\"checkbox\" name=\"\" value=\"1\"/>\n    * </span>\n    */\n    var customCheckboxes = {\n\n        /**\n        * This class specifies checked custom-checkbox\n        * You may set it on serverisde\n        */\n        CHECKED_CLASS : 'checked',\n\n        init : function () {\n\n            var checkboxes = document.getElementsByClassName('js-custom-checkbox');\n\n            if (checkboxes.length) for (var i = checkboxes.length - 1; i >= 0; i--) {\n\n                checkboxes[i].addEventListener('click', codex.content.customCheckboxes.clicked, false);\n\n            }\n\n        },\n\n        clicked : function () {\n\n            var checkbox  = this,\n                input     = this.querySelector('input'),\n                isChecked = this.classList.contains(codex.content.customCheckboxes.CHECKED_CLASS);\n\n            checkbox.classList.toggle(codex.content.customCheckboxes.CHECKED_CLASS);\n\n            if (isChecked) {\n\n                input.removeAttribute('checked');\n\n            } else {\n\n                input.setAttribute('checked', 'checked');\n\n            }\n\n        }\n    };\n\n    var approvalButtons = {\n\n        CLICKED_CLASS : 'click-again-to-approve',\n\n        init : function () {\n\n            var buttons = document.getElementsByClassName('js-approval-button');\n\n            if (buttons.length) for (var i = buttons.length - 1; i >= 0; i--) {\n\n                buttons[i].addEventListener('click', codex.content.approvalButtons.clicked, false);\n\n            }\n\n        },\n\n        clicked : function (event) {\n\n            var button    = this,\n                isClicked = this.classList.contains(codex.content.approvalButtons.CLICKED_CLASS);\n\n            if (!isClicked) {\n\n                /* временное решение, пока нет всплывающего окна подверждения важных действий */\n                button.classList.add(codex.content.approvalButtons.CLICKED_CLASS);\n\n                event.preventDefault();\n\n            }\n\n        }\n    };\n\n    return {\n\n        toggleMobileMenu : toggleMobileMenu,\n        customCheckboxes : customCheckboxes,\n        approvalButtons : approvalButtons,\n        toggle : toggle\n\n    };\n\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/content.js\n// module id = 6\n// module chunks = 0","/**\n * Appender is being used for ajax-loading next pages of lists\n *\n *    codex.appender.init({\n *        buttonId      : 'buttonLoadNews',       // button for listening\n *        currentPage   : '<?= $page_number ?>',    // currentPage number\n *        url           : '/',                      // url for ajax-requests\n *        targetBlockId : 'list_of_news',           // target for appending\n *        autoLoading   : true,                     // allow loading when reach bottom while scrolling\n *    });\n */\n\nvar appender = {\n\n    /* Pagination. Here is a number of current page */\n    page : 1,\n\n    settings : null,\n\n    blockForItems : null,\n\n    loadMoreButton : null,\n\n    /**\n     * Button's text for saving it.\n     * On its place dots will be while news are loading\n     */\n    buttonText : null,\n\n    init : function (settings) {\n\n        this.settings = settings;\n\n        /* Checking for existing button and field for loaded info */\n        this.loadMoreButton = document.getElementById(this.settings.buttonId);\n\n        if (!this.loadMoreButton) return false;\n\n        this.blockForItems = document.getElementById(this.settings.targetBlockId);\n\n        if (!this.blockForItems) return false;\n\n        this.page       = settings.currentPage;\n        this.buttonText = this.loadMoreButton.innerHTML;\n\n        if (this.settings.autoLoading) this.autoLoading.isAllowed = true;\n\n        this.loadMoreButton.addEventListener('click', function (event) {\n\n            codex.appender.load();\n\n            event.preventDefault();\n\n            codex.appender.autoLoading.init();\n\n        }, false);\n\n    },\n\n    load : function () {\n\n        var requestUrl = this.settings.url + (parseInt(this.page) + 1);\n            // separator   = '<a href=\"' + requestUrl + '\"><div class=\"article post-list-item w_island separator\">Page ' + (parseInt(this.page) + 1) + '</div></a>';\n\n        codex.ajax.call({\n            type: 'post',\n            url: requestUrl,\n            data: {},\n            beforeSend : function () {\n\n                codex.appender.loadMoreButton.classList.add('loading');\n\n            },\n            success : function (response) {\n\n                response = JSON.parse(response);\n\n                if (response.success) {\n\n                    if (!response.list) return;\n\n                    /* Append items */\n                    // codex.appender.blockForItems.innerHTML += separator;\n                    codex.appender.blockForItems.innerHTML += response.list;\n\n                    /* Next page */\n                    codex.appender.page++;\n\n                    if (codex.appender.settings.autoLoading) {\n\n                        /* Removing restriction for auto loading */\n                        codex.appender.autoLoading.canLoad = true;\n\n                    }\n\n                    /* Checking for next page's existing. If no — hide the button for loading news and remove listener */\n                    if (!response.next_page) codex.appender.disable();\n\n                } else {\n\n                    codex.core.showException('Не удалось подгрузить новости');\n\n                }\n\n                codex.appender.loadMoreButton.classList.remove('loading');\n\n            }\n\n        });\n\n    },\n\n    disable : function () {\n\n        codex.appender.loadMoreButton.style.display = 'none';\n\n        if (codex.appender.autoLoading.isLaunched) {\n\n            codex.appender.autoLoading.disable();\n\n        }\n\n    },\n\n    autoLoading : {\n\n        isAllowed : false,\n\n        isLaunched : false,\n\n        /**\n         * Possibility to load news by scrolling.\n         * Restriction for reduction requests which could be while scrolling\n         */\n        canLoad : true,\n\n        init : function () {\n\n            if (!this.isAllowed) return;\n\n            window.addEventListener('scroll', codex.appender.autoLoading.scrollEvent);\n\n            codex.appender.autoLoading.isLaunched = true;\n\n        },\n\n        disable : function () {\n\n            window.removeEventListener('scroll', codex.appender.autoLoading.scrollEvent);\n\n            codex.appender.autoLoading.isLaunched = false;\n\n        },\n\n        scrollEvent : function () {\n\n            var scrollReachedEnd = window.pageYOffset + window.innerHeight >= document.body.clientHeight;\n\n            if (scrollReachedEnd && codex.appender.autoLoading.canLoad) {\n\n                codex.appender.autoLoading.canLoad = false;\n\n                codex.appender.load();\n\n            }\n\n        },\n\n    }\n\n};\n\nmodule.exports = appender;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/appender.js\n// module id = 7\n// module chunks = 0","/**\n * Parser module\n * @author Taly Guryn\n */\nvar parser = {\n\n    input : null,\n\n    init : function () {\n\n        // this.input = document.getElementById(settings.input_id);\n\n        var _this = this;\n\n        this.input.addEventListener('paste', function () {\n\n            _this.inputPasteCallback();\n\n        }, false);\n\n    },\n\n    inputPasteCallback : function () {\n\n        var e = this.input;\n\n        var _this = this;\n\n        window.setTimeout(function () {\n\n            _this.sendRequest(e.value);\n\n        }, 100);\n\n    },\n\n\n    sendRequest : function (url) {\n\n        codex.core.ajax({\n            type: 'get',\n            url: '/ajax/get_page',\n            data: { 'url' : url },\n            success: function (response) {\n\n                var title, content, sourceLink;\n\n                if ( response.success == 1) {\n\n                    title = document.getElementById('page_form_title');\n                    content = document.getElementById('page_form_content');\n                    sourceLink = document.getElementById('source_link');\n\n                    title.value = response.title;\n                    content.value = response.article;\n                    sourceLink.value = url;\n\n                    // while we have no own editor, we should use this getting element\n                    // cause I can't edit code for external editor\n                    document.getElementsByClassName('redactor_redactor')[0].innerHTML = response.article;\n\n                } else {\n\n                    codex.core.showException('Не удалось импортировать страницу');\n\n                }\n\n            }\n\n        });\n\n    }\n};\n\nmodule.exports = parser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/parser.js\n// module id = 8\n// module chunks = 0","/**\n * Comments module\n * @author  @guryn @neSpecc\n * @copyright CodeX Team https://github.com/codex-team\n * @version 1.1.0\n */\nmodule.exports = (function () {\n\n    var commentsList = null,\n        anchor       = document.location.hash;\n\n    var CSS_ = {\n        replyForm :         'comments-form',\n        replyTextarea :     'comment-form__text',\n        replyOpened :       'comment-form__placeholder--opened',\n        replySubmitButton : 'comment-form__button',\n        highlighted :       'comment--highligthed'\n    };\n\n    /**\n     * Settings-menu toggler selector\n     * @type {String}\n     */\n    var menuTogglerSelector = '.js-comment-settings';\n\n    /**\n     * Initialize comments\n     * @param {object} data        params\n     * @param {sring} data.listId  comments list wrapper id\n     */\n    function init(data) {\n\n        commentsList = document.getElementById(data.listId);\n\n        if (anchor) {\n\n            highligthAnchor();\n\n        }\n\n    }\n\n    /**\n     * Remove holder and append form for comment\n     * @param {Element} placeholder 'Write reply...' button\n     */\n    function reply( replyButton ) {\n\n        /** If reply already opened, do noting */\n        if ( replyButton.classList.contains( CSS_.replyOpened ) ) {\n\n            return;\n\n        }\n\n        /** Get reply params from dataset */\n        var replyParams = {\n            parentId : replyButton.dataset.parentId,\n            rootId   : replyButton.dataset.rootId,\n            action   : replyButton.dataset.action\n        };\n\n        /** Create reply form */\n        var form = createForm( replyParams );\n\n        /** Insert form after reply button */\n        codex.core.insertAfter( replyButton, form );\n\n        replyButton.classList.add( CSS_.replyOpened );\n        getFormTextarea(form).focus();\n\n    }\n\n    /**\n     * Returns reply form\n     *\n     * @param {object} params\n     * @param {Number} params.parentId     parent comment's id\n     * @param {Number} params.rootId       root comment's id\n     * @param {String} params.action       URL for saving\n     *\n     * @return {Element} element that holds textarea and submit-button\n     */\n    function createForm( params ) {\n\n        var textarea     = createTextarea(),\n            button       = createButton(),\n            form         = document.createElement('DIV');\n\n        form.classList.add(CSS_.replyForm);\n\n        /** Store data in Textarea */\n        textarea.dataset.parentId = params.parentId;\n        textarea.dataset.rootId   = params.rootId;\n        textarea.dataset.action   = params.action;\n\n        form.appendChild(textarea);\n        form.appendChild(button);\n\n        return form;\n\n    }\n\n    /** Return textarea for form for comment */\n    function createTextarea() {\n\n        var textarea = document.createElement('TEXTAREA');\n\n        textarea.classList.add(CSS_.replyTextarea);\n        textarea.placeholder = 'Ваш комментарий';\n\n        textarea.addEventListener('keydown', keydownSubmitHandler, false);\n        textarea.addEventListener('blur', blurTextareaHandler, false);\n\n        codex.autoresizeTextarea.addListener(textarea);\n\n        return textarea;\n\n    }\n\n    /** Return submit button for form*/\n    function createButton() {\n\n        var button = document.createElement('DIV');\n\n        button.classList.add( CSS_.replySubmitButton, 'button', 'master');\n        button.textContent = 'Отправить';\n\n        button.addEventListener('click', submitClicked_, false);\n\n        return button;\n\n    }\n\n    /**\n     * Reply submit button click handler\n     */\n    function submitClicked_() {\n\n        var submit = this,\n            form   = submit.parentNode,\n            textarea = getFormTextarea(form);\n\n        send_( textarea );\n\n    }\n\n    /* Return textarea for given form */\n    function getFormTextarea(form) {\n\n        return form.getElementsByTagName('TEXTAREA')[0];\n\n    }\n\n    /**\n     * Remove form on textarea blur\n     * @param {Event} blur Event\n     */\n    function blurTextareaHandler( event ) {\n\n        var textarea  = event.target,\n            form      = textarea.parentNode,\n            commentId = textarea.dataset.parentId;\n\n        if (!textarea.value.trim()) {\n\n            removeForm(form, commentId);\n\n        }\n\n    }\n\n    /**\n     * Removes reply form\n     * @param {Element} form\n     * @param {Number} commentId   reply target comment id\n     */\n    function removeForm( form, commentId ) {\n\n        var replyButton = document.getElementById('reply' + commentId );\n\n        form.remove();\n        replyButton.classList.remove(CSS_.replyOpened);\n\n    }\n\n    /**\n     * Catch Ctrl+Enter or Cmd+Enter for send form\n     * @param {Event} event    Keydown Event\n     */\n    function keydownSubmitHandler(event) {\n\n        var ctrlPressed  = event.ctrlKey || event.metaKey,\n            enterPressed = event.keyCode == 13,\n            textarea = event.target;\n\n        if ( ctrlPressed && enterPressed ) {\n\n            send_( textarea );\n\n            event.preventDefault();\n\n        }\n\n    }\n\n    /**\n     * Ajax function for submit comment\n     * @param {Element} textarea    input with dataset and text\n     */\n    function send_( textarea ) {\n\n        var formData  = new FormData(),\n            form      = textarea.parentNode,\n            submitBtn = form.querySelector('.' + CSS_.replySubmitButton),\n            rootId    = textarea.dataset.rootId,\n            parentId  = textarea.dataset.parentId,\n            actionURL = textarea.dataset.action;\n\n        formData.append('root_id', rootId);\n        formData.append('parent_id', parentId);\n        formData.append('comment_text', textarea.value);\n        formData.append('csrf', window.csrf);\n\n        codex.ajax.call({\n            type: 'POST',\n            url: actionURL,\n            data: formData,\n            beforeSend : function () {\n\n                submitBtn.classList.add('loading');\n\n            },\n            success : function (response) {\n\n                var comment;\n\n                submitBtn.classList.remove('loading');\n\n                response = JSON.parse(response);\n\n                if (!response.success) {\n\n                    codex.alerts.show({\n                        type: 'error',\n                        message: response.error\n                    });\n                    return;\n\n                }\n\n                /** Remove form and return placeholder */\n                removeForm(form, parentId);\n\n                /** Remove empty-feed block */\n                removeEmptyCommentsBlock();\n\n                comment = codex.core.parseHTML(response.comment)[0];\n                commentsList.appendChild(comment);\n\n                /** Scroll down to the new comment */\n                window.scrollTo(0, document.body.scrollHeight);\n\n                /** Highligth new comment */\n                highligthComment(response.commentId);\n\n                /** If menu found, activate it */\n                activateMenu(comment);\n\n            }\n\n        });\n\n    }\n\n    /**\n     * Removes empty-feed motivation\n     */\n    function removeEmptyCommentsBlock() {\n\n        var emptyCommentsBlock = document.querySelector('.js-empty-comments');\n\n        if (!emptyCommentsBlock) {\n\n            return;\n\n        }\n\n        emptyCommentsBlock.remove();\n\n    }\n\n    /**\n     * If menu-toggler found in comment\n     * @return {Element} comment - comment's island\n     */\n    function activateMenu( comment ) {\n\n        var  menuToggler = comment.querySelector(menuTogglerSelector);\n\n        if (!menuToggler) {\n\n            return;\n\n        }\n\n        codex.islandSettings.prepareToggler(menuToggler, menuTogglerSelector);\n\n    }\n\n    /**\n     * Highligth comment by id for a time\n     * @param {Number} commentId   id comment to highlight\n     */\n    function highligthComment(commentId) {\n\n        var comment = document.getElementById('comment' + commentId);\n\n        comment.classList.add(CSS_.highlighted);\n\n        window.setTimeout(function () {\n\n            comment.classList.remove(CSS_.highlighted);\n\n        }, 500);\n\n    }\n\n    /** Highligth comment if anchor is in url */\n    function highligthAnchor() {\n\n        var numbers = anchor.match(/\\d+/),\n            commentId;\n\n        if (!numbers) return;\n\n        commentId = numbers[0];\n\n        highligthComment(commentId);\n\n    }\n\n    /**\n     * Comment removing action\n     * @return {Event} click Event\n     */\n    function remove() {\n\n        var itemClicked = this,\n            targetId    = itemClicked.dataset.id;\n\n        if (!window.confirm('Подтвердите удаление комментария')) {\n\n            return;\n\n        }\n\n        document.location = '/delete-comment/' + targetId;\n\n    }\n\n    return {\n        init : init,\n        reply : reply,\n        remove : remove\n    };\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/comments.js\n// module id = 9\n// module chunks = 0","/**\n* Notifications tips module\n*/\nmodule.exports = (function () {\n\n    require('../../css/modules/alerts.css');\n\n    var CSS_ = {\n        wrapper : 'cdx-notifies-wrapper',\n        notification : 'cdx-notifies',\n        crossBtn: 'cdx-notifies-cross'\n    };\n\n    var wrapper_ = null;\n\n    function prepare_() {\n\n        if ( wrapper_ ) {\n\n            return true;\n\n        }\n\n        wrapper_ = document.createElement('DIV');\n        wrapper_.classList.add(CSS_.wrapper);\n\n        document.body.appendChild(wrapper_);\n\n    }\n\n    /**\n    * @param {Object} options:\n    *\n    * @property {String} type    - type of notification. Just adds {CSS_.notification + '--' + type} class. 'notify' by default\n    * @property {String} message - text to notify, can contains HTML\n    * @property {String} time    - expiring time\n    */\n    function show(options) {\n\n        prepare_();\n\n        var notify  = document.createElement('DIV'),\n            cross   = document.createElement('DIV'),\n            message = options.message,\n            type    = options.type || 'notify',\n            time    = options.time || 8000;\n\n        if (!message) {\n\n            return;\n\n        }\n\n        notify.classList.add(CSS_.notification);\n        notify.classList.add(CSS_.notification + '--' + type);\n        notify.innerHTML = message;\n\n        cross.classList.add(CSS_.crossBtn);\n        cross.addEventListener('click', function () {\n\n            notify.remove();\n\n        });\n\n        notify.appendChild(cross);\n        wrapper_.appendChild(notify);\n\n        notify.classList.add('bounceIn');\n\n        window.setTimeout(function () {\n\n            notify.remove();\n\n        }, time);\n\n    }\n\n    return {\n        show : show\n    };\n\n})({});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/alerts.js\n// module id = 10\n// module chunks = 0","/**\n* Dropdown menu module\n* @author: @ndawn\n*/\n\nmodule.exports = (function () {\n\n    /**\n     * Menu block cache\n     * @type {Element|null}\n     */\n    var menuHolder = null;\n\n    /**\n     * Activated menus\n     * @type {Array}\n     */\n    var activated = [];\n\n    /**\n     * CSS class names\n     * @type {Object}\n     */\n    var CSS = {\n        menu   : 'island-settings__menu',\n        item   : 'island-settings__item',\n        showed : 'island-settings__menu--showed'\n\n    };\n\n    /**\n     * Initialization\n     * @param  {Object} settings  - initial settings\n     */\n    var init = function (settings) {\n\n        var menuTogglers = document.querySelectorAll(settings.selector),\n            startIndex   = activated.length,\n            endIndex     = menuTogglers.length + activated.length;\n\n        for (var index = startIndex; index < endIndex; index++) {\n\n            /**\n             * Save initial object\n             */\n            activated.push({\n                el : menuTogglers[index],\n                settings: settings\n            });\n\n            prepareToggler(index, menuTogglers[index - startIndex]);\n\n        }\n\n    };\n\n    /**\n     * @public\n     * Add event listener to the toggler\n     * @param  {Number} index   - toggler initial index\n     * @param  {Element} toggler\n     */\n    var prepareToggler = function (index, toggler) {\n\n        /** Save initial selector to specify menu type */\n        toggler.dataset.index = index;\n        toggler.addEventListener('mouseover', menuTogglerHovered, false);\n        toggler.addEventListener('mouseleave', menuTogglerBlurred, false);\n\n    };\n\n    /**\n     * @private\n     *\n     * Island circled-icon mouseover handler\n     *\n     * @param {Event} event     mouseover-event\n     */\n    var menuTogglerHovered = function () {\n\n        var menuToggler = this,\n            menuParams;\n\n        /** Prevent mouseover handling multiple times */\n        if ( menuToggler.dataset.opened == 'true' ) {\n\n            return;\n\n        }\n\n        menuToggler.dataset.opened = true;\n\n        if (!menuHolder) {\n\n            menuHolder = createMenu();\n\n        }\n\n        /**\n         * Get current menu params\n         * @type {Object}\n         */\n        menuParams = getMenuParams(menuToggler.dataset.index);\n\n        console.assert(menuParams.items, 'Menu items missed');\n\n        fill(menuParams.items, menuToggler);\n        move(menuToggler);\n\n    };\n\n    /**\n     * Toggler blur handler\n     */\n    var menuTogglerBlurred = function () {\n\n        this.dataset.opened = false;\n\n    };\n\n    /**\n     * Return menu parametres by toggler index\n     * @param {Number}  index  - index got in init() method\n     * @return {Object}\n     */\n    var getMenuParams = function (index) {\n\n        return activated[index].settings;\n\n    };\n\n    /**\n     * Fills menu with items\n     * @param  {Array}   items     list of menu items\n     * @param  {Element} toggler   islan menu icon with data-attributes\n     */\n\n    var fill = function (items, toggler) {\n\n        var i,\n            itemData,\n            itemElement;\n\n        menuHolder.innerHTML = '';\n\n        for (i = 0; !!(itemData = items[i]); i++) {\n\n            itemElement = createItem(itemData);\n\n            /** Save index in dataset for edit-ability */\n            itemElement.dataset.itemIndex = i;\n\n            /** Pass all parametres stored in icon's dataset to the item's dataset */\n            for (var attr in toggler.dataset) {\n\n                itemElement.dataset[attr] = toggler.dataset[attr];\n\n            }\n\n            menuHolder.appendChild(itemElement);\n\n        }\n\n    };\n\n    /**\n    * @private\n    * Creates an option block\n    * @param {Object}   item          - menu item data\n    * @param {String}   item.title    - title\n    * @param {Function} item.handler  - click handler\n    *\n    * @return {Element} menu item with click handler\n    */\n    var createItem = function ( item ) {\n\n        var itemEl = document.createElement('LI');\n\n        itemEl.classList.add(CSS.item);\n\n        console.assert(item.title, 'islandSettings: item title is missed');\n        console.assert(typeof item.handler == 'function', 'islandSettings: item handler is not a function');\n\n        itemEl.textContent = item.title;\n        itemEl.addEventListener('click', itemClicked);\n\n        return itemEl;\n\n    };\n\n    /**\n     * Single callback for all items handler\n     * Calls defined handler on itemClicked (Menu li Element) context and trasmits arguments\n     */\n    var itemClicked = function () {\n\n        var itemEl = this,\n            togglerIndex = itemEl.dataset.index,\n            itemIndex = itemEl.dataset.itemIndex,\n            menuParams,\n            handler,\n            args;\n\n        menuParams = getMenuParams(togglerIndex);\n\n        handler = menuParams.items[itemIndex].handler;\n        args    = menuParams.items[itemIndex].arguments;\n\n        handler.call(itemEl, args || {});\n\n    };\n\n    /**\n    * @private\n    * Creates the dropdown menu\n    */\n    var createMenu = function () {\n\n        var block = document.createElement('UL');\n\n        block.classList.add(CSS.menu);\n\n        return block;\n\n    };\n\n    /**\n    * Appends a menu to the container\n    * @param {Element} container - where to append menu\n    */\n    var move = function (container) {\n\n        container.appendChild(menuHolder);\n        menuHolder.classList.add(CSS.showed);\n\n    };\n\n    /**\n     * @public\n     * @description Updates menu item\n     * @param  {Number} togglerIndex   - Menu toggler initial index stored in toggler's dataset.index\n     * @param  {Number} itemIndex      - Item index stored in item's dataset.itemIndex\n     * @param  {String} title          - new title\n     * @param  {Function} handler      - new handler\n     * @param  {Object} args           - handler arguments\n     */\n    var updateItem = function (togglerIndex, itemIndex, title, handler, args) {\n\n        console.assert(activated[togglerIndex], 'Toggler was not found by index');\n\n        var currentMenu = activated[togglerIndex],\n            currentItemEl = menuHolder.childNodes[itemIndex],\n            currentItem;\n\n        if (!currentMenu) {\n\n            return;\n\n        }\n\n        currentItem = activated[togglerIndex].settings.items[itemIndex];\n\n        if ( title ) {\n\n            currentItem.title = title;\n\n        }\n\n        if ( args  ) {\n\n            currentItem.arguments = args;\n\n        }\n\n        if (handler && typeof handler == 'function') {\n\n            currentItem.handler = handler;\n\n        }\n\n        /** Update opened menu item text  */\n        if (menuHolder) {\n\n            if ( title ) {\n\n                currentItemEl.textContent = title;\n\n            }\n\n        }\n\n        codex.core.log('item updated %o', 'islandSettings', 'info', currentItem);\n\n    };\n\n    return {\n        init : init,\n        updateItem : updateItem,\n        prepareToggler : prepareToggler\n    };\n\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/islandSettings.js\n// module id = 12\n// module chunks = 0","/**\n* Module for comments textarea autoresize\n*/\nmodule.exports = (function () {\n\n    /**\n    * Textareas initialization\n    */\n    var init = function () {\n\n        var textareas = document.getElementsByClassName('js-autoresizable');\n\n        if (textareas.length) {\n\n            for (var i = 0; i < textareas.length; i++) {\n\n                addListener(textareas[i]);\n\n                checkScrollHeight(textareas[i]);\n\n            }\n\n        }\n\n    };\n\n    /**\n    * Add input event listener to textarea\n    *\n    * @param {Element} textarea — node which need to be able to autoresize\n    */\n    var addListener = function (textarea) {\n\n        textarea.addEventListener('input', textareaChanged, false);\n\n    };\n\n    /**\n    * Hanging events on textareas\n    */\n    var textareaChanged = function (event) {\n\n        var textarea = event.target;\n\n        checkScrollHeight(textarea);\n\n    };\n\n    /**\n    * Increasing textarea height\n    */\n    var checkScrollHeight = function (textarea) {\n\n        if (textarea.scrollHeight > textarea.clientHeight) {\n\n            textarea.style.height = textarea.scrollHeight + 'px';\n\n        }\n\n    };\n\n    return {\n        init: init,\n        addListener : addListener\n    };\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/autoresizeTextarea.js\n// module id = 13\n// module chunks = 0","/**\n * User methods module\n */\nmodule.exports = function () {\n\n    /**\n     * Manupulations with user photo\n     * @return {Object} - Module\n     */\n    var photo = function () {\n\n        /**\n         * Mark elements with this name=\"\" to dynamically update their sources\n         * @type {String}\n         */\n        var updatableElementsName = 'js-img-updatable';\n\n        /**\n         * Changes user's photo\n         * @param  {Event}  event   click event\n         */\n        var change = function ( event, transportType ) {\n\n            codex.transport.init({\n                url : '/upload/' + transportType,\n                success : uploaded,\n                error   : error\n            });\n\n        };\n\n        /**\n         * Uploading error\n         * @param  {Object} error\n         */\n        var error = function (uploadError) {\n\n            console.log(uploadError);\n\n        };\n\n        /**\n         * Photo uploading callback\n         * @param  {String} response    server answer\n         */\n        var uploaded = function (response) {\n\n            response = JSON.parse(response);\n\n            if ( !response.success ) {\n\n                codex.alerts.show({\n                    type: 'error',\n                    message: response.message || 'File uploading error :('\n                });\n\n                return;\n\n            }\n\n            console.assert( response.data && response.data.url, 'Wrong response data');\n\n            updateAll( response.data.url );\n\n        };\n\n        /**\n         * Updates all user photo sources\n         * @uses   updatableElementsName  to find img tags\n         * @param  {String} newSource\n         */\n        var updateAll = function ( newSource) {\n\n            var updatebleImages = document.getElementsByName(updatableElementsName);\n\n            for (var i = updatebleImages.length - 1; i >= 0; i--) {\n\n                updatebleImages[i].src = newSource;\n\n            }\n\n        };\n\n        return {\n            change : change\n        };\n\n    }();\n\n    /**\n     * Updatin user ROLE or STATUS\n     * @type {{status, role}}\n     */\n    var promote = function () {\n\n        var status = function (args) {\n\n            var itemClicked = this,\n                userId = itemClicked.dataset.id,\n                value = args.value;\n\n            sendRequest(itemClicked, 'status', userId, value);\n\n        };\n\n        var role = function (args) {\n\n            var itemClicked = this,\n                userId = itemClicked.dataset.id,\n                value = args.value;\n\n            sendRequest(itemClicked, 'role', userId, value);\n\n        };\n\n        /**\n         * Change user role or status request\n         * @param {Element} itemClicked     - menu item element\n         * @param {string}  field           - field to save (role|status)\n         * @param {Number}  userId          - target user id\n         * @param {Number}  value           - new value\n         */\n        var sendRequest = function (itemClicked, field, userId, value) {\n\n            var url = '/user/' + userId + '/change/' + field,\n                requestData = new FormData();\n\n            requestData.append('value', value);\n\n            codex.ajax.call({\n                url : url,\n                type : 'POST',\n                data: requestData,\n                beforeSend : function () {\n\n                    itemClicked.classList.add('loading');\n\n                },\n                success: function (response) {\n\n                    var menuIndex = itemClicked.dataset.index,\n                        itemIndex = itemClicked.dataset.itemIndex;\n\n                    response = JSON.parse(response);\n\n                    itemClicked.classList.remove('loading');\n\n                    codex.islandSettings.updateItem(menuIndex, itemIndex, response.buttonText, null, {\n                        value: response.buttonValue\n                    });\n\n                    codex.alerts.show({\n                        type: response.success ? 'success' : 'error',\n                        message: response.message || 'Не удалось сохранить изменения'\n                    });\n\n                }\n            });\n\n        };\n\n        return {\n            status : status,\n            role   : role\n        };\n\n    }();\n\n\n    var changePassword = function () {\n\n        var form    = null,\n            input   = null,\n            button  = null;\n        /**\n         * Shows form with input for current password\n         *\n         * @param lockButton\n         */\n        var showForm = function (lockButton) {\n\n            lockButton.classList.add('hide');\n\n            form = document.getElementById('change-password-form');\n            input = document.getElementById('change-password-input');\n\n            form.classList.remove('hide');\n\n\n        };\n\n        /**\n         * Handler for set password button\n         *\n         * @param form_\n         */\n        var set = function (form_) {\n\n            form = form_;\n            requestChange(form, true);\n            showSuccessMessage();\n\n        };\n\n        /**\n         * Requests email with change password link\n         *\n         * @param button_\n         * @param dontShowResponse - if TRUE, response will be ignored\n         */\n        var requestChange = function (button_, dontShowResponse) {\n\n            button = button_;\n            button.classList.add('loading');\n\n            var data = new FormData();\n\n            data.append('csrf', window.csrf);\n            data.append('currentPassword', input ? input.value : '');\n\n            codex.ajax.call({\n                url: '/user/passchange',\n                type: 'POST',\n                data: data,\n                success: dontShowResponse ? null : ajaxResponse,\n                error: ajaxResponse\n            });\n\n        };\n\n        /**\n         * Repeat password change email sending\n         *\n         * @param button_\n         */\n        var repeatEmail = function (button_) {\n\n            button_.classList.add('loading');\n\n            var data = new FormData();\n\n            data.append('csrf', window.csrf);\n            data.append('repeatEmail', true);\n\n            codex.ajax.call({\n                url: '/user/passchange',\n                type: 'POST',\n                data: data,\n                success: function () {\n\n                    button_.classList.remove('loading');\n\n                    codex.alerts.show({\n                        type: 'success',\n                        message: 'Мы отправили на вашу почту письмо'\n                    });\n\n                },\n                error: function () {\n\n                    button_.classList.remove('loading');\n\n                    codex.alerts.show({\n                        type: 'error',\n                        message: 'Произошла ошибка'\n                    });\n\n                }\n            });\n\n        };\n\n        var ajaxResponse = function (response) {\n\n            button.classList.remove('loading');\n\n            try {\n\n                response = JSON.parse(response);\n\n            } catch (e) {\n\n                response = {success: 0, message: 'Произошла ошибка'};\n\n            }\n\n            if (!response.success) {\n\n                if (input) input.classList.add('form__input--invalid');\n\n                codex.alerts.show({\n                    type: 'error',\n                    message:response.message\n                });\n\n\n            } else {\n\n                showSuccessMessage();\n                return;\n\n            }\n\n\n        };\n\n        /**\n         * Shows success email sending message\n         *\n         */\n        var showSuccessMessage = function () {\n\n            codex.alerts.show({\n                type: 'success',\n                message: 'Мы выслали инструкцию на вашу почту'\n            });\n\n            form.classList.add('hide');\n\n            form = document.getElementById('change-password-success');\n            form.classList.remove('hide');\n\n        };\n\n        return {\n            showForm: showForm,\n            requestChange: requestChange,\n            set: set,\n            repeatEmail: repeatEmail,\n        };\n\n    }();\n\n    /**\n     * Working with bio\n     */\n    var bio = function () {\n\n        /**\n         * Edited textarea cache\n         * @type {Element|null}\n         */\n        var textarea = null;\n\n        /**\n         * Edit bio click handler;\n         * @param {Element} button  - button clicked\n         */\n        var edit = function ( button ) {\n\n            var opened = button.querySelector('textarea');\n\n            if (opened) {\n\n                return;\n\n            }\n\n            textarea = document.createElement('TEXTAREA');\n            textarea.innerHTML = button.textContent.trim();\n            textarea.addEventListener('keydown', keydown);\n\n            button.innerHTML = '';\n            button.appendChild(textarea);\n\n            textarea.focus();\n\n            /** Fire autoresize */\n            codex.autoresizeTextarea.addListener(textarea);\n\n        };\n\n        /**\n         * Bio textarea keydowns\n         * Sends via AJAX by ENTER\n         */\n        var keydown = function ( event ) {\n\n            if ( event.keyCode == codex.core.keys.ENTER ) {\n\n                send(this.value);\n                event.preventDefault();\n\n            }\n\n        };\n\n        /**\n         * Sends bio field\n         * @param  {String} val textarea value\n         */\n        var send = function (val) {\n\n            if (!val.trim()) {\n\n                codex.alerts.show({\n                    type: 'error',\n                    message: 'Write something about yourself'\n                });\n                return;\n\n            }\n\n            var formData = new FormData();\n\n            formData.append('bio', val);\n            formData.append('csrf', window.csrf);\n\n            codex.ajax.call({\n                type : 'POST',\n                url : '/user/updateBio',\n                data : formData,\n                beforeSend: beforeSend,\n                success : saved\n            });\n\n        };\n\n        /**\n         * Simple beforeSend method\n         */\n        var beforeSend = function () {\n\n            textarea.classList.add('loading');\n\n        };\n\n        /**\n         * Success saving callback\n         */\n        var saved = function (response) {\n\n            response = JSON.parse(response);\n\n            if (!response.success || !response.bio) {\n\n                textarea.classList.remove('loading');\n                codex.alerts.show({\n                    type: 'error',\n                    message: 'Saving error, sorry'\n                });\n                return;\n\n            }\n\n            var newBio = document.createTextNode(response.bio || '');\n\n            /** Update user's CSRF token */\n            window.csrf = response.csrf;\n\n            codex.core.replace(textarea, newBio);\n\n        };\n\n        return {\n            edit: edit\n        };\n\n    }();\n\n    var email = function () {\n\n        var currentEmail    = null,\n            loadingButton   = null;\n\n        var saved = function (response) {\n\n            try {\n\n                response = JSON.parse(response);\n\n                if (response.success) {\n\n                    codex.core.replace(currentEmail.parentNode, codex.core.parseHTML(response.island)[0]);\n\n                    codex.alerts.show({\n                        type: 'success',\n                        message: 'Адрес почты обновлен. Теперь вам нужно подтвердить его, перейдя по ссылке в письме.'\n                    });\n\n                    currentEmail = null;\n                    return;\n\n                }\n\n            } catch (e) {}\n\n            loadingButton.classList.remove('loading');\n\n            codex.alerts.show({\n                type: 'error',\n                message: response.message || 'Произошла ошибка, попробуйте позже'\n            });\n\n        };\n\n        var send = function () {\n\n            if (currentEmail.value.trim() == '') {\n\n                codex.alerts.show({\n                    type: 'error',\n                    message: 'Введите email'\n                });\n\n                return;\n\n            }\n\n            loadingButton = this;\n            loadingButton.classList.add('loading');\n\n            var data = new FormData();\n\n            data.append('email', currentEmail.value);\n            data.append('csrf', window.csrf);\n\n            codex.ajax.call({\n                url: 'user/changeEmail',\n                type: 'POST',\n                data: data,\n                success: saved,\n                error: saved\n            });\n\n        };\n\n        var sendConfirmation = function (button) {\n\n            var success = function (response) {\n\n                response = JSON.parse(response);\n\n                codex.alerts.show({\n                    type: 'success',\n                    message: response.message\n                });\n                button.classList.remove('loading');\n\n            };\n\n            button.classList.add('loading');\n\n            codex.ajax.call({\n                url: '/ajax/confirmation-email',\n                success: success\n            });\n\n        };\n\n        var changed = function (input) {\n\n            if (currentEmail) {\n\n                return;\n\n            }\n\n            currentEmail = input;\n\n            var saveButton = document.createElement('BUTTON'),\n                sendButton = input.parentNode.querySelector('button');\n\n            if (sendButton) sendButton.classList.remove('master');\n\n            saveButton.classList.add('button', 'master');\n            saveButton.textContent = 'Сохранить';\n\n            saveButton.addEventListener('click', send);\n\n            input.oninput = null;\n            input.parentNode.appendChild(saveButton);\n\n        };\n\n        var set = function (button) {\n\n            button.classList.add('hide');\n\n            var form = document.getElementById('set-email-form');\n\n            form.classList.remove('hide');\n\n            currentEmail = document.getElementById('set-email-input');\n\n        };\n\n        return {\n            sendConfirmation: sendConfirmation,\n            changed: changed,\n            send: send,\n            set: set,\n        };\n\n    }();\n\n\n    return {\n        changePassword: changePassword,\n        promote: promote,\n        photo: photo,\n        bio : bio,\n        email: email,\n    };\n\n}();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/user.js\n// module id = 14\n// module chunks = 0","var sharer = {\n\n    init : function () {\n\n        var shareButtons = document.querySelectorAll('.js-share');\n\n        for (var i = shareButtons.length - 1; i >= 0; i--) {\n\n            shareButtons[i].addEventListener('click', sharer.click, true);\n\n        }\n\n    },\n\n    shareVk : function (data) {\n\n        var link  = 'https://vk.com/share.php?';\n\n        link += 'url='          + data.url;\n        link += '&title='       + data.title;\n        link += '&description=' + data.desc;\n        link += '&image='       + data.img;\n        link += '&noparse=true';\n\n        this.popup( link, 'vkontakte'  );\n\n    },\n\n    shareFacebook : function (data) {\n\n        var FB_APP_ID = 1740455756240878,\n            link      = 'https://www.facebook.com/dialog/share?display=popup';\n\n        link += '&app_id='       + FB_APP_ID;\n        link += '&href='         + data.url;\n        link += '&redirect_uri=' + document.location.href;\n\n        this.popup( link, 'facebook' );\n\n    },\n\n    shareTwitter : function (data) {\n\n        var link = 'https://twitter.com/share?';\n\n        link += 'text='      + data.title;\n        link += '&url='      + data.url;\n        link += '&counturl=' + data.url;\n\n        this.popup( link, 'twitter' );\n\n    },\n\n    shareTelegram : function (data) {\n\n        var link  = 'https://telegram.me/share/url';\n\n        link += '?text=' + data.title;\n        link += '&url='  + data.url;\n\n        this.popup( link, 'telegram' );\n\n    },\n\n    popup : function ( url, socialType ) {\n\n        window.open( url, '', 'toolbar=0,status=0,width=626,height=436' );\n\n        /**\n         * Write analytics goal\n         */\n        if ( window.yaCounter32652805 ) {\n\n            window.yaCounter32652805.reachGoal('article-share', function () {}, this, {type: socialType, url: url});\n\n        }\n\n    },\n\n    click : function (event) {\n\n        var target = event.target;\n\n        /**\n         * Social provider stores in data 'shareType' attribute on share-button\n         * But click may be fired on child-element in button, so we need to handle it.\n         */\n        var type = target.dataset.shareType || target.parentNode.dataset.shareType;\n\n        if (!sharer[type]) return;\n\n        /**\n         * Sanitize share params\n         * @todo test for taint strings\n         */\n            // for (key in window.shareData){\n            //      window.shareData[key] = encodeURIComponent(window.shareData[key]);\n            // }\n\n        var shareData = {\n\n            url:    target.dataset.url || target.parentNode.dataset.url,\n            title:  target.dataset.title || target.parentNode.dataset.title,\n            desc:   target.dataset.desc || target.parentNode.dataset.desc,\n            img:    target.dataset.img || target.parentNode.dataset.title\n\n        };\n\n        /**\n         * Fire click handler\n         */\n\n        sharer[type](shareData);\n\n    }\n\n};\n\nmodule.exports = sharer;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/sharer.js\n// module id = 15\n// module chunks = 0","/**\n * Module for load and start codex-editor\n *\n * Using:\n *\n * codex.writing.prepare({\n *     holderId : 'placeForEditor',                                         // (required)\n *     hideEditorToolbar : <?= $hideEditorToolbar ? 'true' : 'false' ?>,\n *     items : <?= json_encode($page->blocks) ?: '[]' ?>,\n *     pageId   : <?= $page->id ?>,\n *     parentId : <?= $page->id_parent ?>,\n * }).then(\n *    codex.writing.init\n * );\n */\n\n\nmodule.exports = (function () {\n\n    var editorIsReady = false,\n        submitButton = null,\n        settings = {\n            hideEditorToolbar   : false,\n            titleId             : 'editorWritingTitle',\n            initialBlockPlugin  : 'paragraph',\n            data                : {items: []},\n            resources           : [],\n            holderId            : null,\n            pageId              : 0,\n            parentId            : 0,\n        };\n\n    /**\n     * Prepare editor's resourses\n     *\n     * @param  {Object} initSettings    base settings for editor\n     * @return {Promise}            all editor's resources are ready\n     */\n    var prepare = function (initSettings) {\n\n        mergeSettings(initSettings);\n\n        return loadEditorResources(settings.resources)\n                .then(function () {\n\n                    editorIsReady = true;\n\n                });\n\n    };\n\n    /**\n     * Fill module's settings by settings from params\n     *\n     * @param  {Object} initSettings  list of params from init\n     */\n    function mergeSettings(initSettings) {\n\n        for (var key in initSettings) {\n\n            settings[key] = initSettings[key];\n\n        }\n\n    }\n\n    /**\n     * Run editor\n     */\n    function startEditor() {\n\n        /**\n         * @todo get from server\n         */\n        var EDITOR_IMAGE = 1;\n        var EDITOR_FILE  = 2;\n\n        codex.editor.start({\n\n            holderId:  settings.holderId,\n            initialBlockPlugin : settings.initialBlockPlugin,\n            hideToolbar: settings.hideEditorToolbar,\n            sanitizer: {\n                tags : {\n                    p : {},\n                    a : {\n                        href: true,\n                        target: '_blank'\n                    }\n                }\n            },\n            tools : {\n                paragraph: {\n                    type               : 'paragraph',\n                    iconClassname      : 'ce-icon-paragraph',\n                    render             : window.paragraph.render,\n                    validate           : window.paragraph.validate,\n                    save               : window.paragraph.save,\n                    allowedToPaste     : true,\n                    showInlineToolbar  : true,\n                    destroy            : window.paragraph.destroy,\n                    allowRenderOnPaste : true\n                },\n                header: {\n                    type             : 'header',\n                    iconClassname    : 'ce-icon-header',\n                    appendCallback   : window.header.appendCallback,\n                    makeSettings     : window.header.makeSettings,\n                    render           : window.header.render,\n                    validate         : window.header.validate,\n                    save             : window.header.save,\n                    destroy          : window.header.destroy,\n                    displayInToolbox : true\n                },\n                image: {\n                    type                  : 'image',\n                    iconClassname         : 'ce-icon-picture',\n                    appendCallback        : window.image.appendCallback,\n                    prepare               : window.image.prepare,\n                    makeSettings          : window.image.makeSettings,\n                    render                : window.image.render,\n                    save                  : window.image.save,\n                    destroy               : window.image.destroy,\n                    isStretched           : true,\n                    showInlineToolbar     : true,\n                    displayInToolbox      : true,\n                    renderOnPastePatterns : window.image.pastePatterns,\n                    config: {\n                        uploadImage : '/upload/' + EDITOR_IMAGE,\n                        uploadFromUrl : ''\n                    }\n                },\n                attaches: {\n                    type             : 'attaches',\n                    displayInToolbox : true,\n                    iconClassname    : 'cdx-attaches__icon',\n                    prepare          : window.cdxAttaches.prepare,\n                    render           : window.cdxAttaches.render,\n                    save             : window.cdxAttaches.save,\n                    validate         : window.cdxAttaches.validate,\n                    destroy          : window.cdxAttaches.destroy,\n                    appendCallback   : window.cdxAttaches.appendCallback,\n                    config: {\n                        fetchUrl: '/upload/' + EDITOR_FILE,\n                        maxSize: 25000,\n                    }\n                },\n                list: {\n                    type: 'list',\n                    iconClassname: 'ce-icon-list-bullet',\n                    make: window.list.make,\n                    appendCallback: null,\n                    makeSettings: window.list.makeSettings,\n                    render: window.list.render,\n                    validate: window.list.validate,\n                    save: window.list.save,\n                    destroy: window.list.destroy,\n                    displayInToolbox: true,\n                    showInlineToolbar: true,\n                    enableLineBreaks: true,\n                    allowedToPaste: true\n                }\n            },\n\n            data : settings.data\n        });\n\n        var titleInput = document.getElementById(settings.titleId);\n\n        /**\n         * Focus at the title\n         */\n        titleInput.focus();\n        titleInput.addEventListener('keydown', titleKeydownHandler );\n\n    }\n\n    /**\n     * Title input keydowns\n     * @description  By ENTER, sets focus on editor\n     * @param  {Event} event  - keydown event\n     */\n    var titleKeydownHandler = function (event) {\n\n        /* Set focus on Editor by Enter     */\n        if ( event.keyCode == codex.core.keys.ENTER ) {\n\n            event.preventDefault();\n\n            focusRedactor();\n\n        }\n\n    };\n\n    /**\n     * Temporary scheme to focus Codex Editor first-block\n     */\n    var focusRedactor = function () {\n\n        var firstBlock       = codex.editor.nodes.redactor.firstChild,\n            contentHolder    = firstBlock.firstChild,\n            firstToolWrapper = contentHolder.firstChild,\n            aloneTextNode;\n\n        /**\n         * Caret will not be placed in empty textNode, so we need textNode with zero-width char\n         */\n        aloneTextNode = document.createTextNode('\\u200B');\n\n        /**\n         * We need to append manually created textnode before returning\n         */\n        firstToolWrapper.appendChild(aloneTextNode);\n\n        codex.editor.caret.set(firstToolWrapper, 0, 0);\n\n    };\n\n    /**\n     * Public function for run editor\n     */\n    var init = function () {\n\n        if (!editorIsReady) return;\n\n        startEditor();\n\n    };\n\n    /**\n     * Show form and hide placeholder\n     *\n     * @param  {Element} targetClicked       placeholder with wrapper\n     * @param  {String}  formId               remove 'hide' from this form by id\n     * @param  {String}  hidePlaceholderClass add this class to placeholder\n     */\n    var open = function (targetClicked, formId, hidePlaceholderClass) {\n\n        if (!editorIsReady) return;\n\n        var holder = targetClicked;\n\n        document.getElementById(formId).classList.remove('hide');\n        holder.classList.add(hidePlaceholderClass);\n        holder.onclick = null;\n\n        init();\n\n    };\n\n    /**\n     * Load editor resources and append block with them to body\n     *\n     * @param  {Array} resources list of resources which should be loaded\n     * @return {Promise}\n     */\n    var loadEditorResources = function (resources) {\n\n        return Promise.all(\n            resources.map(loadResource)\n        );\n\n    };\n\n    /**\n     * Loads resource\n     *\n     * @param  {Object} resource name and paths for js and css\n     * @return {Promise}\n     */\n    function loadResource(resource) {\n\n        var name      = resource.name,\n            scriptUrl = resource.path.script,\n            styleUrl  = resource.path.style;\n\n        return Promise.all([\n            codex.loader.importScript(scriptUrl, name),\n            codex.loader.importStyle(styleUrl, name)\n        ]);\n\n    }\n\n    /**\n    * Prepares form to submit\n    */\n    var getForm = function () {\n\n        var atlasForm = document.forms.atlas;\n\n        if (!atlasForm) return;\n\n        /** CodeX.Editor */\n        var JSONinput = document.createElement('TEXTAREA');\n\n        JSONinput.name   = 'content';\n        JSONinput.id     = 'json_result';\n        JSONinput.hidden = true;\n        atlasForm.appendChild(JSONinput);\n\n        /**\n         * Save blocks\n         */\n        codex.editor.saver.saveBlocks();\n\n        return atlasForm;\n\n    };\n\n    /**\n     * Send ajax request with writing form data\n     * @param button - submit button (needed to add loading animation)\n     */\n    var submit = function (button) {\n\n        var title = document.forms.atlas.elements['title'],\n            form;\n\n        if (title.value.trim() === '') {\n\n            codex.editor.notifications.notification({\n                type: 'warn',\n                message: 'Заполните заголовок'\n            });\n\n            return;\n\n        }\n\n        form = getForm();\n\n        submitButton = button;\n\n        submitButton.classList.add('loading');\n\n        window.setTimeout(function () {\n\n            form.elements['content'].innerHTML = JSON.stringify({items: codex.editor.state.jsonOutput});\n\n            codex.ajax.call({\n                url: '/p/save',\n                data: new FormData(form),\n                success: submitResponse,\n                type: 'POST'\n            });\n\n        }, 500);\n\n    };\n\n    /**\n     * Response handler for page saving\n     * @param response\n     */\n    var submitResponse = function (response) {\n\n        submitButton.classList.remove('loading');\n\n        response = JSON.parse(response);\n\n        if (response.success) {\n\n            window.location = response.redirect;\n            return;\n\n        }\n\n        codex.editor.notifications.notification({\n            type: 'warn',\n            message: response.message\n        });\n\n    };\n\n    /**\n    * Submits writing form for opening in full-screan page without saving\n    */\n    var openEditorFullscreen = function () {\n\n\n        var form = getForm();\n\n        window.setTimeout(function () {\n\n            form.elements['content'].innerHTML = JSON.stringify({ items: codex.editor.state.jsonOutput });\n\n            form.submit();\n\n        }, 500);\n\n    };\n\n    return {\n        init    : init,\n        prepare : prepare,\n        open    : open,\n        openEditorFullscreen : openEditorFullscreen,\n        submit               : submit,\n    };\n\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/writing.js\n// module id = 16\n// module chunks = 0","module.exports = {\n\n    prefixJS : 'cdx-script-',\n\n    prefixCSS : 'cdx-style-',\n\n    importScript : function (scriptPath, instanceName) {\n\n        return new Promise(function (resolve, reject) {\n\n            var script;\n\n            /** Script is already loaded */\n            if ( !instanceName ) {\n\n                reject('Instance name is missed');\n\n            } else if ( document.getElementById(this.prefixJS + instanceName) ) {\n\n                resolve(scriptPath);\n\n            }\n\n            script = document.createElement('SCRIPT');\n            script.async = true;\n            script.defer = true;\n            script.id    = codex.loader.prefixJS + instanceName;\n\n            script.onload = function () {\n\n                resolve(scriptPath);\n\n            };\n\n            script.onerror = function () {\n\n                reject(scriptPath);\n\n            };\n\n            script.src = scriptPath;\n            document.head.appendChild(script);\n\n        });\n\n    },\n\n    importStyle : function (stylePath, instanceName) {\n\n        return new Promise(function (resolve, reject) {\n\n            var style;\n\n            /** Style is already loaded */\n            if ( !instanceName ) {\n\n                reject('Instance name is missed');\n\n            } else if ( document.getElementById(this.prefixCSS + instanceName) ) {\n\n                resolve(stylePath);\n\n            }\n\n            style = document.createElement('LINK');\n            style.type = 'text/css';\n            style.href = stylePath;\n            style.rel  = 'stylesheet';\n            style.id   = codex.loader.prefixCSS + instanceName;\n\n            style.onload = function () {\n\n                resolve(stylePath);\n\n            };\n\n            style.onerror = function () {\n\n                reject(stylePath);\n\n            };\n\n            style.src = stylePath;\n            document.head.appendChild(style);\n\n        });\n\n    },\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/loader.js\n// module id = 17\n// module chunks = 0","/**\n* Module for scroll-up button\n* @author @scytem @guryn\n*/\n\n\nmodule.exports = (function () {\n\n\n    /**\n     * Scroll-up will be shown after sroll reaches this value\n     * @type {Number}\n     */\n    var offsetToShow = 300;\n\n    /**\n     * Size content width\n     * @type {Number}\n     */\n    var layoutWidth = 0;\n\n    /**\n     * Clickable Element that holds arrow\n     * @type {Element}\n     */\n    var clickableZone = null;\n\n    /**\n     * Window Resize stop watcher Timeout\n     * @type {timeoutId}\n     */\n    var resizeStopWatcher = null;\n\n    /**\n     * @public\n     *\n     * Init method\n     * Fired after document is ready\n     */\n    var init = function ( layoutHolderId ) {\n\n        var layout = document.getElementById(layoutHolderId);\n\n        if (!layout) {\n\n            codex.core.log('Layout center-col ID wissed', 'scrollUp', 'warn');\n            return;\n\n        }\n\n        layoutWidth = layout.offsetWidth;\n\n        clickableZone = makeUI();\n\n        /** Bind click event on scroll-up button */\n        clickableZone.addEventListener('click', scrollPage);\n\n        /** Global window scroll handler */\n        window.addEventListener('scroll', windowScrollHandler);\n\n        /** Autoresize */\n        window.addEventListener('resize', sizeChanged, false);\n\n        /** Set size */\n        resize();\n\n        /* Check heigth */\n        windowScrollHandler();\n\n    };\n\n    /**\n    * Scroll the document to the begin position\n    * @param {number} yCoords Y-coordinate\n    */\n    var scrollPage = function (yCoords) {\n\n        window.scrollTo(0, yCoords);\n\n    };\n\n    /**\n    * Hiding Scroll-up button if user on the top of page\n    */\n    var windowScrollHandler = function () {\n\n        var notTheTop = window.pageYOffset > offsetToShow;\n\n        if (notTheTop) {\n\n            clickableZone.classList.add('show');\n\n        } else {\n\n            clickableZone.classList.remove('show');\n\n        }\n\n    };\n\n    /**\n    * Resize hover/click area touching user width of screen\n    */\n    var resize = function () {\n\n        var windowWidth     = document.body.clientWidth,\n            leftColumtWidth = (windowWidth - layoutWidth) / 2;\n\n        clickableZone.style.width = leftColumtWidth + 'px';\n\n    };\n\n\n    /**\n    * Delay for resize\n    */\n    var sizeChanged = function () {\n\n        if ( resizeStopWatcher ) {\n\n            window.clearTimeout(resizeStopWatcher);\n\n        }\n\n        resizeStopWatcher = window.setTimeout(resize, 150);\n\n    };\n\n    /**\n     * Makes scroll-up arrow and wrapper\n     */\n    var makeUI = function () {\n\n        var wrapper = document.createElement('DIV'),\n            arrow   = document.createElement('DIV');\n\n        wrapper.classList.add('scroll-up');\n        arrow.classList.add('scroll-up__arrow');\n\n        wrapper.appendChild(arrow);\n        document.body.appendChild(wrapper);\n\n        return wrapper;\n\n    };\n\n    return {\n        init: init\n    };\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/scrollUp.js\n// module id = 18\n// module chunks = 0","/**\n * Admin module\n */\n\nmodule.exports = (function () {\n\n    var emptyBrandingClass = 'branding--empty';\n    var loadingClass       = 'branding--loading';\n    var preloaderClass     = 'branding__preloader';\n    var preloadShown       = 'branding__preloader--shown';\n\n    /**\n     * Branding holder\n     * @type {Element|null}\n     */\n    var wrapper = null;\n\n    /**\n     * Initialization\n     * @fires preload\n     */\n    var init = function () {\n\n        wrapper = document.getElementById('brandingSection');\n\n        if ( !wrapper ) {\n\n            return;\n\n        }\n\n        var url = wrapper.dataset.src;\n\n        preload( url );\n\n    };\n\n    /**\n     * Shows blurred preview and change it to the full-view image\n     * @param  {String} fullUrl          - URL of original image\n     * @return {String|null} previewUrl  - pass to renew preloader\n     */\n    var preload = function ( fullUrl, previewUrl ) {\n\n        var preloader = wrapper.querySelector('.' + preloaderClass),\n            img = document.createElement('IMG');\n\n        if ( previewUrl ) {\n\n            preloader.style.backgroundImage = \"url('\" + previewUrl + \"')\";\n            preloader.classList.add(preloadShown);\n\n        }\n\n        img.src = fullUrl;\n        img.onload = function () {\n\n            wrapper.style.backgroundImage = \"url('\" + fullUrl + \"')\";\n            preloader.classList.remove(preloadShown);\n\n        };\n\n    };\n\n\n\n    /**\n     * changes site branding\n     * @private\n     */\n    var change = function () {\n\n        codex.transport.init({\n\n            url : '/upload/4',\n            accept : 'image/*',\n            beforeSend: function () {\n\n                wrapper.classList.add(loadingClass);\n\n            },\n            success : function (result) {\n\n                var response = JSON.parse(result),\n                    url,\n                    preview;\n\n                wrapper.classList.remove(loadingClass);\n\n                if ( response.success ) {\n\n                    url = response.data.url;\n                    preview = '/upload/branding/preload_' + response.data.name + '.jpg';\n\n                    if ( wrapper.classList.contains(emptyBrandingClass) ) {\n\n                        wrapper.classList.remove(emptyBrandingClass);\n\n                    }\n\n                    preload( url, preview );\n\n                } else {\n\n                    codex.alerts.show({\n                        type: 'error',\n                        message: 'Uploading failed'\n                    });\n\n                }\n\n            },\n            error: function () {\n\n                wrapper.classList.remove(loadingClass);\n\n                codex.alerts.show({\n                    type: 'error',\n                    message: 'Error while uploading branding image;'\n                });\n\n            }\n\n        });\n\n    };\n\n    return {\n        init: init,\n        change : change\n    };\n\n})({});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/branding.js\n// module id = 19\n// module chunks = 0","/**\n * Page significant methods\n */\nmodule.exports = (function () {\n\n    /**\n     * Saves current clicked item in page drop-down menu\n     * @type {Element}\n     */\n    var currentItemClicked = null;\n\n    /**\n     * Opens page-writing form\n     */\n    var openWriting = function () {\n\n        currentItemClicked = this;\n\n        var targetId = currentItemClicked.dataset.id;\n\n        document.location = '/p/writing?id=' + targetId;\n\n    };\n\n    /**\n     * Opens page-writing form\n     */\n    var remove = function () {\n\n        currentItemClicked = this;\n\n        var targetId    = currentItemClicked.dataset.id;\n\n        if (!window.confirm('Подтвердите удаление страницы')) {\n\n            return;\n\n        }\n\n        codex.ajax.call({\n            url : '/p/' + targetId + '/delete',\n            success: removeHandler\n        });\n\n    };\n\n    /**\n     * Opens writing form for child page\n     */\n    var newChild = function () {\n\n        currentItemClicked = this;\n\n        var targetId = currentItemClicked.dataset.id;\n\n        document.location = '/p/writing?parent=' + targetId;\n\n    };\n\n    /**\n     * Send ajax request to add page to menu\n     */\n    var addToMenu = function () {\n\n        currentItemClicked = this;\n        currentItemClicked.classList.add('loading');\n\n        var targetId = currentItemClicked.dataset.id;\n\n        codex.ajax.call({\n            url : '/p/' + targetId + '/promote?list=menu',\n            success: promote\n        });\n\n    };\n\n    /**\n     * Send ajax request to add page to news\n     */\n    var addToNews = function () {\n\n        currentItemClicked = this;\n        currentItemClicked.classList.add('loading');\n\n        var targetId = currentItemClicked.dataset.id;\n\n        codex.ajax.call({\n            url : '/p/' + targetId + '/promote?list=news',\n            success: promote\n        });\n\n    };\n\n    /**\n     * Parse JSON response\n     * @param {JSON} response\n     * @returns {Object} response\n     */\n    var getResponse = function (response) {\n\n        try {\n\n            response = JSON.parse(response);\n\n        } catch(e) {\n\n            return {\n                success: 0,\n                message: 'Произошла ошибка, попробуйте позже'\n            };\n\n        }\n\n        return response;\n\n    };\n\n    /**\n     * Response handler for page remove\n     * @param response\n     */\n    var removeHandler = function (response) {\n\n        response = getResponse(response);\n\n        if (response.success) {\n\n            window.location.replace(response.redirect);\n            return;\n\n        }\n\n        codex.alerts.show({\n            type: 'error',\n            message: response.message\n        });\n\n    };\n\n    /**\n     * Response handler for page promotion\n     * @param response\n     */\n    var promote = function (response) {\n\n        response = getResponse(response);\n        currentItemClicked.classList.remove('loading');\n\n        if (response.success) {\n\n            if (response.buttonText) {\n\n                replaceMenu(currentItemClicked, response.buttonText);\n\n            }\n\n            if (response.menu) {\n\n                updateSiteMenu(response.menu);\n\n            }\n\n            /**\n             * TODO: сделать замену текста кнопки\n             **/\n\n            codex.alerts.show({\n                type: 'success',\n                message: response.message\n            });\n\n            return;\n\n        }\n\n        codex.alerts.show({\n            type: 'error',\n            message: response.message\n        });\n\n    };\n\n    /**\n     * Replace site menu with new button text from server response\n     * @param currentItemMenu\n     * @param newResponseMenuText\n     */\n    var replaceMenu = function (currentItemMenu, newResponseMenuText) {\n\n        var itemIndex = currentItemMenu.dataset.itemIndex,\n            menuIndex = currentItemMenu.dataset.index;\n\n        /** update item on menu */\n        codex.islandSettings.updateItem(menuIndex, itemIndex, newResponseMenuText);\n\n        /** update item text immediatelly */\n        currentItemMenu.textContent = newResponseMenuText;\n\n    };\n\n    /**\n     * Replace site menu with menu form server response\n     *\n     * @param menu\n     */\n    var updateSiteMenu = function (menu) {\n\n        var oldMenu = document.getElementById('js-site-menu'),\n            newMenu = codex.core.parseHTML(menu)[0];\n\n        codex.core.replace(oldMenu, newMenu);\n\n    };\n\n\n    return {\n        openWriting: openWriting,\n        newChild: newChild,\n        addToMenu: addToMenu,\n        addToNews: addToNews,\n        remove : remove\n    };\n\n}());\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./public/app/js/modules/pages.js\n// module id = 20\n// module chunks = 0"],"sourceRoot":""}